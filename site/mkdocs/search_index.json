{
    "docs": [
        {
            "location": "/",
            "text": "\u7b97\u6cd5\u4ea4\u6613\n\n\n\u5728\u7b97\u6cd5\u7edf\u6cbb\u4e00\u5207\u7684\u65f6\u4ee3\uff0c\u4e0d\u7ba1\u613f\u610f\u4e0e\u5426\uff0c\u7b97\u6cd5\u90fd\u5728\u4ee5\u524d\u6240\u672a\u6709\u7684\u65b9\u5f0f\u5728\u5404\u4e2a\u9886\u57df\u63a5\u7ba1\u4eba\u7c7b\u7684\u5de5\u4f5c\uff0c\u8fd9\u5176\u4e2d\u4e5f\u5305\u62ec\u4ea4\u6613\u9886\u57df\u3002  \n\n\n\u7b97\u6cd5\u4ea4\u6613\u7684\u6982\u5ff5\u7ecf\u8fc7\u957f\u65f6\u95f4\u6f14\u53d8\uff0c\u5916\u5ef6\u4e0d\u65ad\u6269\u5c55\uff0c\u5982\u4eca\u7b97\u6cd5\u4ea4\u6613\u7684\u6982\u5ff5\u4e0e\u6700\u521d\u7684\u5b9a\u4e49\u5df2\u7ecf\u4e0d\u592a\u4e00\u6837\u3002  \n\n\n\n\n\u7b97\u6cd5\u4ea4\u6613(algorithmic trading)\u662f\u6307\u4e8b\u5148\u8bbe\u8ba1\u597d\u4ea4\u6613\u7b56\u7565\uff0c\u7136\u540e\u5c06\u5176\u7f16\u5236\u6210\u8ba1\u7b97\u673a\u7a0b\u5e8f\u3002\u5229\u7528\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u7b97\u6cd5\u6765\u51b3\u5b9a\u4ea4\u6613\u4e0b\u5355\u7684\u65f6\u673a\u3001\u4ef7\u683c\u548c\u6570\u91cf\u7b49\u3002  \n\n\n\n\n\u7b97\u6cd5\u4ea4\u6613\u63d0\u51fa\u4e4b\u521d\uff0c\u4ec5\u4ec5\u662f\u6307\u4e3a\u4e86\u964d\u4f4e\u51b2\u51fb\u6210\u672c\uff0c\u5229\u7528\u7279\u5b9a\u7684\u8ba1\u7b97\u673a\u7b97\u6cd5\u6267\u884c\u5927\u989d\u8ba2\u5355\u3002\u4f46\u76ee\u524d\u7b97\u6cd5\u4ea4\u6613\u7684\u6982\u5ff5\u5df2\u4e0d\u4ec5\u4ec5\u5305\u62ec\u8ba2\u5355\u6267\u884c\uff0c\u51e1\u662f\u4ee5\u201c\u7b97\u6cd5\u7684\u65b9\u5f0f\u201d\u505a\u4ea4\u6613\uff08\u5305\u62ec\u4ea4\u6613\u7b56\u7565\u751f\u6210\u3001\u9a8c\u8bc1\u3001\u8ba2\u5355\u6267\u884c\u7b49\u7b49\uff09\uff0c\u90fd\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u201c\u7b97\u6cd5\u4ea4\u6613\u201d\u3002  \n\n\n\u6211\u4eec\u4ee5\u201c\u7b97\u6cd5\u4ea4\u6613\u201d\u7edf\u79f0\u91cf\u5316\u4ea4\u6613\u3001\u7a0b\u5e8f\u5316\u4ea4\u6613\u3001\u7cfb\u7edf\u5316\u4ea4\u6613\u7b49\u6982\u5ff5\u3002\u8fd9\u51e0\u4e2a\u6982\u5ff5\u4e4b\u95f4\u7684\u5173\u7cfb\u5fae\u5999\uff0c\u5398\u6e05\u5b83\u4eec\u9700\u8981\u82b1\u4e00\u4e9b\u65f6\u95f4\uff0c\u6211\u4eec\u5c31\u4ee5\u201c\u7b97\u6cd5\u4ea4\u6613\u201d\u7edf\u4e00\u6307\u4ee3\u3002\n\n\n\u4ea4\u6613\u7f51\u5173\n\n\n\u4ea4\u6613\u8005\u5f80\u5f80\u9700\u8981\u5728\u591a\u4e2a\u5e02\u573a\u4ea4\u6613\u5927\u91cf\u5408\u7ea6\uff0c\u4f8b\u5982Alpha\u5bf9\u51b2\u9700\u8981\u540c\u65f6\u4ea4\u6613\u6570\u91cf\u4f17\u591a\u7684\u80a1\u7968\uff0c\u5957\u5229\u5219\u9700\u8981\u540c\u65f6\u4ea4\u6613\u4e0d\u540c\u7684\u5408\u7ea6\u3001\u6216\u8005\u5728\u4e0d\u540c\u7684\u4ea4\u6613\u6240\u4e4b\u95f4\u4ea4\u6613\u540c\u4e00\u5408\u7ea6\u3002\n\n\u4e0d\u540c\u7684\u7ecf\u7eaa\u5546\u548c\u4ea4\u6613\u6240\u5f80\u5f80\u4f1a\u63d0\u4f9b\u4e0d\u540c\u7684\u63a5\u5165\u65b9\u5f0f\uff0c\u56e0\u6b64\u5e02\u9762\u4e0a\u5b58\u5728\u4f17\u591a\u683c\u5f0f\u4e0d\u4e00\u7684\u4ea4\u6613\u63a5\u53e3\u3002\u6b64\u5916\uff0c\u4e0d\u540c\u7684\u4ea4\u6613\u8005\u53ef\u80fd\u4f1a\u4ee5\u4e0d\u540c\u7684\u6280\u672f\u63a5\u5165\u5e02\u573a\uff0c\u5982\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5e73\u53f0\u3001\u7f16\u7a0b\u8bed\u8a00\u7b49\u3002  \n\n\n\u56e0\u6b64\uff0c\u4ea4\u6613\u8005\u5f80\u5f80\u9762\u4e34\u7740\u9700\u8981\u4ee5\u4e0d\u540c\u65b9\u5f0f\u63a5\u5165\u4e0d\u540c\u5e02\u573a\u7684\u96be\u9898\u3002\n\n\n\u4ea4\u6613\u7f51\u5173\u7684\u4e00\u4e2a\u91cd\u8981\u529f\u80fd\u5c31\u662f\u4e3a\u4ea4\u6613\u8005\u5c4f\u853d\u5404\u79cd\u4ea4\u6613\u63a5\u53e3\u7684\u5dee\u5f02\uff0c\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684API\u8fd0\u884c\u4ed6\u4eec\u7684\u4ea4\u6613\u7b97\u6cd5\u3002API\u4e3a\u4ea4\u6613\u8005\u63d0\u4f9b\u6240\u9700\u7684\u5b9e\u65f6\u884c\u60c5\u3001\u5c06\u4ea4\u6613\u8005\u7684\u62a5\u5355\u9012\u9001\u7ed9\u4e0d\u540c\u7684\u7ecf\u7eaa\u5546\u548c\u4ea4\u6613\u6240\uff0c\u540c\u65f6\u628a\u62a5\u5355\u6267\u884c\u7ed3\u679c\u53cd\u9988\u7ed9\u4ea4\u6613\u8005\u3002\n\n\u4ea4\u6613\u7f51\u5173\u8fd8\u63d0\u4f9b\u5404\u79cd\u8bed\u8a00\u7ed1\u5b9a\uff0c\u8ba9\u4ea4\u6613\u8005\u4ee5\u7c7b\u4f3c\u7684API\u63a5\u53e3\u63a5\u5165\u5e02\u573a\u3002\n\n\n\u901a\u8fc7\u4ea4\u6613\u7f51\u5173\uff0c\u4ea4\u6613\u8005\u53ea\u987b\u5c06\u7cbe\u529b\u96c6\u4e2d\u4e8e\u4ea4\u6613\u7b97\u6cd5\u7684\u5f00\u53d1\uff0c\u4ea4\u6613\u7684\u5e95\u5c42\u7ec6\u8282\u5219\u7531\u4ea4\u6613\u7f51\u5173\u6765\u5904\u7406\u3002\n\n\nPowerGate\n\n\nPowerGate\u5c31\u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u9ad8\u6027\u80fd\u4ea4\u6613\u7f51\u5173\uff0c\u88ab\u8bbe\u8ba1\u7528\u4e8e\u652f\u6301\u590d\u6742\u7684\u7b97\u6cd5\u4ea4\u6613\u3002PowerGate\u9762\u5411\u4e13\u4e1a\u7684\u7b97\u6cd5\u4ea4\u6613\u7528\u6237\uff0c\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u4ea4\u6613\u7b56\u7565\u8fd0\u884c\u73af\u5883\u3002\n\n\n\n\n\u652f\u6301\u591a\u79cd\u4ea4\u6613\u901a\u9053\u3002 \n\n  \u5c4f\u853d\u5404\u79cd\u4ea4\u6613\u63a5\u53e3\u7684\u5dee\u5f02\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u8bbe\u8ba1\u76ee\u6807\u3002PowerGate\u652f\u6301\u5305\u62ecCTP\u3001\u98de\u9a6c\u3001\u98de\u9f20\u3001\u4f17\u4fe1\u3001LMAX\u3001IB\u5728\u5185\u7684\u4f17\u591a\u4ea4\u6613\u63a5\u53e3\uff0c\u7528\u6237\u53ef\u4ee5\u4ea4\u6613\u5305\u62ec\u80a1\u7968\u3001\u671f\u8d27\u3001\u671f\u6743\u3001\u5916\u6c47\u5728\u5185\u7684\u5404\u79cd\u5408\u7ea6\u3002  \n\n\n\u652f\u6301\u591a\u8d26\u6237\u3002\n\n  PowerGate\u652f\u6301\u540c\u65f6\u767b\u5f55\u591a\u4e2a\u4ea4\u6613\u8d26\u6237\uff0c\u8fd9\u6837\u4e00\u4e2a\u4ea4\u6613\u7b56\u7565\u53ef\u4ee5\u540c\u65f6\u5728\u591a\u4e2a\u8d26\u6237\u4e0a\u4ea4\u6613\u3002\n\n\n\u9ad8\u6027\u80fd\u3002\n\n  PowerGate\u53ef\u4ee5\u5c06\u4ea4\u6613\u7b97\u6cd5\u8fd0\u884c\u4e8e\u7f51\u5173\u8fdb\u7a0b\u5185\uff0c\u8be5\u6a21\u5f0f\u4e0bPowerGate\u53ef\u4ee5\u63d0\u4f9b\u975e\u5e38\u9ad8\u7684\u8fd0\u884c\u6027\u80fd\u3002\u5728\u673a\u5668\u914d\u7f6e\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0cPowerGate\u751a\u81f3\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u6570\u767e\u4e2a\u7b56\u7565\u3002  \n\n\nSDK\u652f\u6301\u5927\u90e8\u5206\u4e3b\u6d41\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\n\n  PowerGate\u672c\u8eab\u4f7f\u7528C++\u7f16\u5199\uff0c\u4f46\u63d0\u4f9b\u7684SDK\u652f\u6301\u5305\u62ecC\u3001C++\u3001Python\u3001JAVA\u3001C#\u3001Matlab\u3001R\u7b49\u5728\u5185\u7684\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\u3002    \n\n\n\u672c\u5730\u90e8\u7f72\u3002\n\n  \u4ea4\u6613\u7b56\u7565\u5b8c\u5168\u8fd0\u884c\u4e8e\u7528\u6237\u81ea\u5df1\u7684\u73af\u5883\u4e2d\uff0c\u65e0\u9700\u8981\u4efb\u4f55\u201c\u4e91\u670d\u52a1\u201d\u652f\u6301\u5c31\u53ef\u72ec\u7acb\u8fd0\u884c\u3002\n\n\n\u5185\u7f6e\u7b97\u6cd5\u4ea4\u6613\u529f\u80fd\u3002\n\n  PowerGate\u63d0\u4f9b\u5185\u7f6e\u7684\u88ab\u52a8\u578b\u7b97\u6cd5\u4ea4\u6613\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u8fd9\u4e9b\u529f\u80fd\u5b8c\u6210\u4e00\u4e9b\u901a\u7528\u7684\u7b97\u6cd5\u4ea4\u6613\u3002\n\n\n\u5f00\u653e\u67b6\u6784\u3002\n\n  PowerGate\u91c7\u7528\u5f00\u653e\u67b6\u6784\uff0c\u4e3a\u4e13\u4e1a\u7684\u7b97\u6cd5\u4ea4\u6613\u8005\u63d0\u4f9b\u7075\u6d3b\u7684\u65b9\u5f0f\uff0c\u8ba9\u4ed6\u4eec\u53ef\u4ee5\u8c03\u6821\u7cfb\u7edf\uff0c\u4ee5\u8fbe\u5230\u4ed6\u4eec\u7684\u6027\u80fd\u548c\u529f\u80fd\u9700\u6c42\u3002\u4f8b\u5982\u7528\u6237\u53ef\u4ee5\u8c03\u6574\u6d88\u606f\u961f\u5217\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u7b56\u7565\u7ebf\u7a0b\u7ed1\u5b9a\u5728\u67d0\u4e2aCPU\u5185\u6838\u4e0a\u3002PowerGate\u7684\u5e95\u5c42SDK\u53ef\u4ee5\u8ba9\u7528\u6237\u81ea\u5df1\u63a5\u5165\u7279\u5b9a\u7684\u7ecf\u7eaa\u5546\u3001\u4ea4\u6613\u6240\u6216\u6570\u636e\u6e90\u3002\n\n\n\u8de8\u5e73\u53f0\u3002\n\n  PowerGate\u7f51\u5173\u540c\u65f6\u652f\u6301Windows\u548cLinux\u5e73\u53f0\uff0cSDK\u4e5f\u80fd\u5728\u8fd9\u4e24\u7c7b\u5e73\u53f0\u4e0a\u8fd0\u884c\u3002",
            "title": "\u7b80\u4ecb"
        },
        {
            "location": "/#_1",
            "text": "\u5728\u7b97\u6cd5\u7edf\u6cbb\u4e00\u5207\u7684\u65f6\u4ee3\uff0c\u4e0d\u7ba1\u613f\u610f\u4e0e\u5426\uff0c\u7b97\u6cd5\u90fd\u5728\u4ee5\u524d\u6240\u672a\u6709\u7684\u65b9\u5f0f\u5728\u5404\u4e2a\u9886\u57df\u63a5\u7ba1\u4eba\u7c7b\u7684\u5de5\u4f5c\uff0c\u8fd9\u5176\u4e2d\u4e5f\u5305\u62ec\u4ea4\u6613\u9886\u57df\u3002    \u7b97\u6cd5\u4ea4\u6613\u7684\u6982\u5ff5\u7ecf\u8fc7\u957f\u65f6\u95f4\u6f14\u53d8\uff0c\u5916\u5ef6\u4e0d\u65ad\u6269\u5c55\uff0c\u5982\u4eca\u7b97\u6cd5\u4ea4\u6613\u7684\u6982\u5ff5\u4e0e\u6700\u521d\u7684\u5b9a\u4e49\u5df2\u7ecf\u4e0d\u592a\u4e00\u6837\u3002     \u7b97\u6cd5\u4ea4\u6613(algorithmic trading)\u662f\u6307\u4e8b\u5148\u8bbe\u8ba1\u597d\u4ea4\u6613\u7b56\u7565\uff0c\u7136\u540e\u5c06\u5176\u7f16\u5236\u6210\u8ba1\u7b97\u673a\u7a0b\u5e8f\u3002\u5229\u7528\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u7b97\u6cd5\u6765\u51b3\u5b9a\u4ea4\u6613\u4e0b\u5355\u7684\u65f6\u673a\u3001\u4ef7\u683c\u548c\u6570\u91cf\u7b49\u3002     \u7b97\u6cd5\u4ea4\u6613\u63d0\u51fa\u4e4b\u521d\uff0c\u4ec5\u4ec5\u662f\u6307\u4e3a\u4e86\u964d\u4f4e\u51b2\u51fb\u6210\u672c\uff0c\u5229\u7528\u7279\u5b9a\u7684\u8ba1\u7b97\u673a\u7b97\u6cd5\u6267\u884c\u5927\u989d\u8ba2\u5355\u3002\u4f46\u76ee\u524d\u7b97\u6cd5\u4ea4\u6613\u7684\u6982\u5ff5\u5df2\u4e0d\u4ec5\u4ec5\u5305\u62ec\u8ba2\u5355\u6267\u884c\uff0c\u51e1\u662f\u4ee5\u201c\u7b97\u6cd5\u7684\u65b9\u5f0f\u201d\u505a\u4ea4\u6613\uff08\u5305\u62ec\u4ea4\u6613\u7b56\u7565\u751f\u6210\u3001\u9a8c\u8bc1\u3001\u8ba2\u5355\u6267\u884c\u7b49\u7b49\uff09\uff0c\u90fd\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u201c\u7b97\u6cd5\u4ea4\u6613\u201d\u3002    \u6211\u4eec\u4ee5\u201c\u7b97\u6cd5\u4ea4\u6613\u201d\u7edf\u79f0\u91cf\u5316\u4ea4\u6613\u3001\u7a0b\u5e8f\u5316\u4ea4\u6613\u3001\u7cfb\u7edf\u5316\u4ea4\u6613\u7b49\u6982\u5ff5\u3002\u8fd9\u51e0\u4e2a\u6982\u5ff5\u4e4b\u95f4\u7684\u5173\u7cfb\u5fae\u5999\uff0c\u5398\u6e05\u5b83\u4eec\u9700\u8981\u82b1\u4e00\u4e9b\u65f6\u95f4\uff0c\u6211\u4eec\u5c31\u4ee5\u201c\u7b97\u6cd5\u4ea4\u6613\u201d\u7edf\u4e00\u6307\u4ee3\u3002",
            "title": "\u7b97\u6cd5\u4ea4\u6613"
        },
        {
            "location": "/#_2",
            "text": "\u4ea4\u6613\u8005\u5f80\u5f80\u9700\u8981\u5728\u591a\u4e2a\u5e02\u573a\u4ea4\u6613\u5927\u91cf\u5408\u7ea6\uff0c\u4f8b\u5982Alpha\u5bf9\u51b2\u9700\u8981\u540c\u65f6\u4ea4\u6613\u6570\u91cf\u4f17\u591a\u7684\u80a1\u7968\uff0c\u5957\u5229\u5219\u9700\u8981\u540c\u65f6\u4ea4\u6613\u4e0d\u540c\u7684\u5408\u7ea6\u3001\u6216\u8005\u5728\u4e0d\u540c\u7684\u4ea4\u6613\u6240\u4e4b\u95f4\u4ea4\u6613\u540c\u4e00\u5408\u7ea6\u3002 \n\u4e0d\u540c\u7684\u7ecf\u7eaa\u5546\u548c\u4ea4\u6613\u6240\u5f80\u5f80\u4f1a\u63d0\u4f9b\u4e0d\u540c\u7684\u63a5\u5165\u65b9\u5f0f\uff0c\u56e0\u6b64\u5e02\u9762\u4e0a\u5b58\u5728\u4f17\u591a\u683c\u5f0f\u4e0d\u4e00\u7684\u4ea4\u6613\u63a5\u53e3\u3002\u6b64\u5916\uff0c\u4e0d\u540c\u7684\u4ea4\u6613\u8005\u53ef\u80fd\u4f1a\u4ee5\u4e0d\u540c\u7684\u6280\u672f\u63a5\u5165\u5e02\u573a\uff0c\u5982\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5e73\u53f0\u3001\u7f16\u7a0b\u8bed\u8a00\u7b49\u3002    \u56e0\u6b64\uff0c\u4ea4\u6613\u8005\u5f80\u5f80\u9762\u4e34\u7740\u9700\u8981\u4ee5\u4e0d\u540c\u65b9\u5f0f\u63a5\u5165\u4e0d\u540c\u5e02\u573a\u7684\u96be\u9898\u3002  \u4ea4\u6613\u7f51\u5173\u7684\u4e00\u4e2a\u91cd\u8981\u529f\u80fd\u5c31\u662f\u4e3a\u4ea4\u6613\u8005\u5c4f\u853d\u5404\u79cd\u4ea4\u6613\u63a5\u53e3\u7684\u5dee\u5f02\uff0c\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684API\u8fd0\u884c\u4ed6\u4eec\u7684\u4ea4\u6613\u7b97\u6cd5\u3002API\u4e3a\u4ea4\u6613\u8005\u63d0\u4f9b\u6240\u9700\u7684\u5b9e\u65f6\u884c\u60c5\u3001\u5c06\u4ea4\u6613\u8005\u7684\u62a5\u5355\u9012\u9001\u7ed9\u4e0d\u540c\u7684\u7ecf\u7eaa\u5546\u548c\u4ea4\u6613\u6240\uff0c\u540c\u65f6\u628a\u62a5\u5355\u6267\u884c\u7ed3\u679c\u53cd\u9988\u7ed9\u4ea4\u6613\u8005\u3002 \n\u4ea4\u6613\u7f51\u5173\u8fd8\u63d0\u4f9b\u5404\u79cd\u8bed\u8a00\u7ed1\u5b9a\uff0c\u8ba9\u4ea4\u6613\u8005\u4ee5\u7c7b\u4f3c\u7684API\u63a5\u53e3\u63a5\u5165\u5e02\u573a\u3002  \u901a\u8fc7\u4ea4\u6613\u7f51\u5173\uff0c\u4ea4\u6613\u8005\u53ea\u987b\u5c06\u7cbe\u529b\u96c6\u4e2d\u4e8e\u4ea4\u6613\u7b97\u6cd5\u7684\u5f00\u53d1\uff0c\u4ea4\u6613\u7684\u5e95\u5c42\u7ec6\u8282\u5219\u7531\u4ea4\u6613\u7f51\u5173\u6765\u5904\u7406\u3002",
            "title": "\u4ea4\u6613\u7f51\u5173"
        },
        {
            "location": "/#powergate",
            "text": "PowerGate\u5c31\u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u9ad8\u6027\u80fd\u4ea4\u6613\u7f51\u5173\uff0c\u88ab\u8bbe\u8ba1\u7528\u4e8e\u652f\u6301\u590d\u6742\u7684\u7b97\u6cd5\u4ea4\u6613\u3002PowerGate\u9762\u5411\u4e13\u4e1a\u7684\u7b97\u6cd5\u4ea4\u6613\u7528\u6237\uff0c\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u4ea4\u6613\u7b56\u7565\u8fd0\u884c\u73af\u5883\u3002   \u652f\u6301\u591a\u79cd\u4ea4\u6613\u901a\u9053\u3002  \n  \u5c4f\u853d\u5404\u79cd\u4ea4\u6613\u63a5\u53e3\u7684\u5dee\u5f02\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u8bbe\u8ba1\u76ee\u6807\u3002PowerGate\u652f\u6301\u5305\u62ecCTP\u3001\u98de\u9a6c\u3001\u98de\u9f20\u3001\u4f17\u4fe1\u3001LMAX\u3001IB\u5728\u5185\u7684\u4f17\u591a\u4ea4\u6613\u63a5\u53e3\uff0c\u7528\u6237\u53ef\u4ee5\u4ea4\u6613\u5305\u62ec\u80a1\u7968\u3001\u671f\u8d27\u3001\u671f\u6743\u3001\u5916\u6c47\u5728\u5185\u7684\u5404\u79cd\u5408\u7ea6\u3002    \u652f\u6301\u591a\u8d26\u6237\u3002 \n  PowerGate\u652f\u6301\u540c\u65f6\u767b\u5f55\u591a\u4e2a\u4ea4\u6613\u8d26\u6237\uff0c\u8fd9\u6837\u4e00\u4e2a\u4ea4\u6613\u7b56\u7565\u53ef\u4ee5\u540c\u65f6\u5728\u591a\u4e2a\u8d26\u6237\u4e0a\u4ea4\u6613\u3002  \u9ad8\u6027\u80fd\u3002 \n  PowerGate\u53ef\u4ee5\u5c06\u4ea4\u6613\u7b97\u6cd5\u8fd0\u884c\u4e8e\u7f51\u5173\u8fdb\u7a0b\u5185\uff0c\u8be5\u6a21\u5f0f\u4e0bPowerGate\u53ef\u4ee5\u63d0\u4f9b\u975e\u5e38\u9ad8\u7684\u8fd0\u884c\u6027\u80fd\u3002\u5728\u673a\u5668\u914d\u7f6e\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0cPowerGate\u751a\u81f3\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u6570\u767e\u4e2a\u7b56\u7565\u3002    SDK\u652f\u6301\u5927\u90e8\u5206\u4e3b\u6d41\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 \n  PowerGate\u672c\u8eab\u4f7f\u7528C++\u7f16\u5199\uff0c\u4f46\u63d0\u4f9b\u7684SDK\u652f\u6301\u5305\u62ecC\u3001C++\u3001Python\u3001JAVA\u3001C#\u3001Matlab\u3001R\u7b49\u5728\u5185\u7684\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\u3002      \u672c\u5730\u90e8\u7f72\u3002 \n  \u4ea4\u6613\u7b56\u7565\u5b8c\u5168\u8fd0\u884c\u4e8e\u7528\u6237\u81ea\u5df1\u7684\u73af\u5883\u4e2d\uff0c\u65e0\u9700\u8981\u4efb\u4f55\u201c\u4e91\u670d\u52a1\u201d\u652f\u6301\u5c31\u53ef\u72ec\u7acb\u8fd0\u884c\u3002  \u5185\u7f6e\u7b97\u6cd5\u4ea4\u6613\u529f\u80fd\u3002 \n  PowerGate\u63d0\u4f9b\u5185\u7f6e\u7684\u88ab\u52a8\u578b\u7b97\u6cd5\u4ea4\u6613\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u8fd9\u4e9b\u529f\u80fd\u5b8c\u6210\u4e00\u4e9b\u901a\u7528\u7684\u7b97\u6cd5\u4ea4\u6613\u3002  \u5f00\u653e\u67b6\u6784\u3002 \n  PowerGate\u91c7\u7528\u5f00\u653e\u67b6\u6784\uff0c\u4e3a\u4e13\u4e1a\u7684\u7b97\u6cd5\u4ea4\u6613\u8005\u63d0\u4f9b\u7075\u6d3b\u7684\u65b9\u5f0f\uff0c\u8ba9\u4ed6\u4eec\u53ef\u4ee5\u8c03\u6821\u7cfb\u7edf\uff0c\u4ee5\u8fbe\u5230\u4ed6\u4eec\u7684\u6027\u80fd\u548c\u529f\u80fd\u9700\u6c42\u3002\u4f8b\u5982\u7528\u6237\u53ef\u4ee5\u8c03\u6574\u6d88\u606f\u961f\u5217\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u7b56\u7565\u7ebf\u7a0b\u7ed1\u5b9a\u5728\u67d0\u4e2aCPU\u5185\u6838\u4e0a\u3002PowerGate\u7684\u5e95\u5c42SDK\u53ef\u4ee5\u8ba9\u7528\u6237\u81ea\u5df1\u63a5\u5165\u7279\u5b9a\u7684\u7ecf\u7eaa\u5546\u3001\u4ea4\u6613\u6240\u6216\u6570\u636e\u6e90\u3002  \u8de8\u5e73\u53f0\u3002 \n  PowerGate\u7f51\u5173\u540c\u65f6\u652f\u6301Windows\u548cLinux\u5e73\u53f0\uff0cSDK\u4e5f\u80fd\u5728\u8fd9\u4e24\u7c7b\u5e73\u53f0\u4e0a\u8fd0\u884c\u3002",
            "title": "PowerGate"
        },
        {
            "location": "/quickstart/",
            "text": "\u5b8c\u6574\u7684PowerGate\u5305\u62ec\u4e00\u4e2a\u53ef\u6267\u884c\u7684\u7f51\u5173\u7a0b\u5e8f\uff0c\u53ca\u76f8\u5e94\u7684\u7f16\u7a0b\u8bed\u8a00SDK\u3002\n\n\u7528\u6237\u4f7f\u7528SDK\u7f16\u5199\u4ea4\u6613\u7b56\u7565\uff0c\u7f51\u5173\u7a0b\u5e8f\u52a0\u8f7d\u7b56\u7565\u8fdb\u884c\u4ea4\u6613\u3002\n\n\n\u6211\u4eec\u5c06\u5229\u7528PowerGate\u8fd0\u884c\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4ea4\u6613\u7b56\u7565\uff0c\u4ee5\u6b64\u8bb2\u89e3\u5b83\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 \n\n\n\u5b89\u88c5PowerGate\u7f51\u5173\n\n\n\u70b9\u51fb\u6b64\u5904\n\u4e0b\u8f7dPowerGate\u7f51\u5173\u5b89\u88c5\u7a0b\u5e8f\u3002\n\n   \u7f51\u5173\u7a0b\u5e8f\u7684\u5b89\u88c5\u8fc7\u7a0b\u4e0e\u666e\u901a\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u88c5\u8fc7\u7a0b\u4e00\u6837\uff0c\u5b83\u7684\u4f7f\u7528\u8bf4\u660e\u8bf7\u770b\n\u8fd9\u91cc\n\u3002 \n\n   PowerGate\u5185\u7f6e\u652f\u6301\u591a\u79cd\u4ea4\u6613\u901a\u9053\uff0c\u5728\u6b64\u6211\u4eec\u4f7f\u7528CTP\u671f\u8d27\u6a21\u62df\u901a\u9053\uff1a\u4e00\u662f\u56e0\u4e3a\u6a21\u62df\u901a\u9053\u53ef\u4ee5\u63d0\u4f9b7x24\u5c0f\u65f6\u670d\u52a1\uff1b\u4e8c\u662f\u56e0\u4e3aCTP\u671f\u8d27\u901a\u9053\u63d0\u4f9b\u6bcf\u79d2\u81f3\u5c11\u4e24\u6b21\u7684Tick\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u5feb\u5730\u770b\u5230\u7b56\u7565\u7684\u8fd0\u884c\u7ed3\u679c\u3002   \n\n\n\u5b89\u88c5Python SDK\n\n\n\u70b9\u51fb\u6b64\u5904\n\u4e0b\u8f7dPowerGate Python SDK\u3002\n\n   \u76ee\u524dSDK\u652f\u6301Win32 Python27\u3002\u8bf7\u786e\u4fdd\u7535\u8111\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86Python27\uff0c\u5b89\u88c5\u7a0b\u5e8f\n\u70b9\u51fb\u6b64\u5904\n\u4e0b\u8f7d\u3002\n\n\n\u7f16\u5199\u7b56\u7565\n\n\n\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u201c\u5747\u7ebf\u91d1\u53c9\u6b7b\u53c9\u201d\u4ea4\u6613\u7b56\u7565\u3002\n\n   \u7b56\u7565\u539f\u7406\u76f8\u5f53\u7b80\u5355\uff1a\u4ee5Tick\u6570\u636e\u4e3a\u57fa\u7840\uff0c\u5f5310\u5468\u671f\u5747\u7ebf\u4e0a\u7a7f40\u5468\u671f\u5747\u7ebf\u65f6\u505a\u591a\uff0c\u5f5310\u5468\u671f\u5747\u7ebf\u4e0b\u7a7f40\u5468\u671f\u5747\u7ebf\u65f6\u505a\u7a7a\uff0c\u6bcf\u6b21\u5747\u4ee5\u5bf9\u624b\u4ef7\u4e0b\u5355\u3002\uff08\n\u8fd9\u662f\u4e00\u4e2a\u9ad8\u6548\u7684\u2018\u788e\u949e\u673a\u2019\uff0c\u6240\u4ee5\u5343\u4e07\u522b\u7528\u81ea\u5df1\u7684\u5b9e\u76d8\u8d26\u53f7\u8fd0\u884c\u8fd9\u4e2a\u7b56\u7565\uff01\n\uff09\n\n   \u6253\u5f00\u4f60\u559c\u7231\u7684\u4ee3\u7801\u7f16\u8f91\u5668\uff0c\u590d\u5236\u7c98\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5e76\u4ee5\u6587\u4ef6\u540d\u201cmacross.py\u201d\u4fdd\u5b58\uff0c\u6216\u8005\u76f4\u63a5\u5230\n\u6b64\u5904\n\u4e0b\u8f7d\u4ee3\u7801\u3002\n\n\n    # -*- coding: utf-8 -*- \n    import math\n    from PowerGate import StrategyBase     #\u7b56\u7565\u57fa\u7c7b\n    from PowerGate import StrategyConfig   #\u7b56\u7565\u914d\u7f6e\n    from PowerGate import MA               #\u5747\u7ebf\n    from PowerGate import Cross            #\u5747\u7ebf\u7a7f\u8d8a\u9a8c\u8bc1\n\n    class MACross(StrategyBase):\n        def __init__(self, *args, **kwargs):\n            super(MACross, self).__init__(*args, **kwargs)\n            self.ma_short = MA()\n            self.ma_long = MA()\n\n        def onStart(self):\n            #\u83b7\u53d6Tick\u6700\u65b0\u4ef7\u6570\u636e\u5e8f\u5217,Tick\u6570\u636e\u5e8f\u5217\u4f1a\u88ab\u7cfb\u7edf\u81ea\u52a8\u586b\u5145\n            self.series = self.getTickSeries().getLastPriceDataSeries()\n\n            #\u4ee5Tick\u6700\u65b0\u4ef7\u6570\u636e\u5e8f\u5217\u548c\u76f8\u5e94\u5468\u671f\u521d\u59cb\u5316\u4e24\u6839\u5747\u7ebf\n            self.ma_short.init(self.series, 10)\n            self.ma_long.init(self.series, 40)\n\n        def onTick(self, tick):\n            #\u5982\u679c\u5747\u7ebf\u8fd8\u6ca1\u6709\u53ef\u7528\u7684\u8ba1\u7b97\u503c\uff0c\u76f4\u63a5\u8fd4\u56de\n            #ma_short\u7684\u5468\u671f\u53c2\u6570\u4e3a10\uff0c\u5f53Tick\u6700\u65b0\u4ef7\u6570\u636e\u5e8f\u5217\u88ab10\u4e2aTick\u586b\u5145\u65f6\uff0cma_short\u83b7\u5f97\u7b2c\u4e00\u4e2aMA\u503c\n            if math.isnan(self.ma_short[0]):\n                return\n\n            #ma_long\u7684\u5468\u671f\u53c2\u6570\u4e3a40\uff0c\u5f53Tick\u6700\u65b0\u4ef7\u6570\u636e\u5e8f\u5217\u88ab40\u4e2aTick\u586b\u5145\u65f6\uff0cma_short\u83b7\u5f97\u7b2c\u4e00\u4e2aMA\u503c\n            if math.isnan(self.ma_long[0]):\n                return\n\n            #\u6253\u5370Tick\u53ca\u4e24\u6761\u5747\u7ebf\u7684\u6700\u65b0\u503c\n            print('CLOSE=%f  MA[10]=%f  MA[40]=%f' % (tick.lastPrice, \n                                                      self.ma_short[0], \n                                                      self.ma_long[0]))\n            #\u77ed\u5747\u7ebf\u4e0a\u7a7f\u957f\u5747\u7ebf\n            if Cross.crossAbove(self.ma_short, self.ma_long): \n                print('Cross Above')\n                #\u4ee5\u7b56\u7565\u8ba2\u9605\u7684\u4e3b\u5408\u7ea6\u4e3a\u6807\u7684\uff0c\u505a\u591a1\u624b\n                self.openLong(self.getMainInstrument(), 1)\n            #\u77ed\u5747\u7ebf\u4e0b\u7a7f\u957f\u5747\u7ebf\n            elif Cross.crossBelow(self.ma_short, self.ma_long): \n                print('Cross Below')\n                #\u4ee5\u7b56\u7565\u8ba2\u9605\u7684\u4e3b\u5408\u7ea6\u4e3a\u6807\u7684\uff0c\u505a\u7a7a1\u624b\n                self.openShort(self.getMainInstrument(), 1)\n\n    if __name__ == '__main__':\n        config = StrategyConfig()\n        #\u8bbe\u7f6e\u7b56\u7565\u540d\u79f0\uff0c\u6bcf\u4e2a\u7b56\u7565\u5fc5\u987b\u6709\u4e00\u4e2a\u540d\u79f0\n        config.setName('MACross')\n        #\u5982\u679c\u53ea\u8ba2\u9605\u4e00\u4e2a\u5408\u7ea6\uff0c\u90a3\u4e48\u8be5\u5408\u7ea6\u5c31\u662f\u7b56\u7565\u4e3b\u5408\u7ea6\uff0c\u5426\u5219\u7b2c\u4e00\u4e2a\u8ba2\u9605\u7684\u5408\u7ea6\u4e3a\u7b56\u7565\u4e3b\u5408\u7ea6\n        config.subscribe(\"rb1710\")\n\n        #\u7b56\u7565\u5b9e\u4f8b\n        strategy = MACross()\n        #\u8fd0\u884c\u7b56\u7565  \n        strategy.run(config)         \n        #\u7b49\u5f85\u7528\u6237\u8f93\u5165\n        raw_input()\n        #\u505c\u6b62\u7b56\u7565\n        strategy.stop()\n\n\n\n\u8fd0\u884cPowerGate\u7f51\u5173\n\n\n\u8bf7\u4ee5CTP\u6a21\u62df\u8d26\u6237\u767b\u5f55PowerGate\u7f51\u5173\u7a0b\u5e8f\u3002\u5982\u679c\u6ca1\u6709\u6a21\u62df\u8d26\u6237\uff0c\u8bf7\u5230\nSimNow\u7f51\u7ad9\n\u6ce8\u518c\u3002\n\n\n  \n\n\n\u8fd0\u884c\u7b56\u7565\n\n\n\u7f51\u5173\u7a0b\u5e8f\u542f\u52a8\u5b8c\u6bd5\uff0c\u6253\u5f00\u547d\u4ee4\u884c\u7a97\u53e3\uff0c\u8fd0\u884c\u4ea4\u6613\u7b56\u7565\uff1a\n\n\n    python macross.py\n\n\n\n\u7b56\u7565\u8fd0\u884c\u65f6\u7684\u8f93\u51fa\u5982\u4e0b\uff1a\n\n\n[2017/05/17 19:00:26.465][I] +===============================================================+\n[2017/05/17 19:00:26.465][I] *   ALGORITHMIC STRATEGY ENGINE [build: May 17 2017 08:22:36]   *\n[2017/05/17 19:00:26.465][I] +===============================================================+\n[2017/05/17 19:00:26.465][I] Engine initializing...\n[2017/05/17 19:00:26.465][W] Could not load data dictionary!\n[2017/05/17 19:00:26.465][I] Load timer service 'SysTimer' done.\n[2017/05/17 19:00:26.465][I] Load market data service 'RemoteMD' done.\n[2017/05/17 19:00:26.465][I] Load order execution service 'RemoteExec' done.\n[2017/05/17 19:00:26.465][I] Total services loaded: 3.\n[2017/05/17 19:00:26.465][I] Load strategy 'MACross' succeed!\n[2017/05/17 19:00:26.465][I] Connect to remote engine at address 127.0.0.1:5501...\n[2017/05/17 19:00:26.554][I] Trading Account Detail [SrvID: 0]:\n=======================================\n     Account ID: xxxxxx\n        Balance: 1284363.160000\n   Realized P/L: 0.000000\n        MTM P/L: 480.000000\n  Client Equity: 1284363.160000\n     Commission: 0.000000\nMargin Occupied: 171002.000000\n     Fund Avail: 988639.160000\n    Risk Degree: 0.000000\n=======================================\n[2017/05/17 19:00:26.555][I] Execution service 'RemoteExec' ready.\n[2017/05/17 19:00:26.555][I] Check auto start...\n[2017/05/17 19:00:26.555][I] Total runtime number: 1.\n[2017/05/17 19:00:26.555][I] Strategy 'MACross' loading...\nCLOSE=2976.000000  MA[10]=2975.900000  MA[40]=2975.550000\n......\nCLOSE=2975.000000  MA[10]=2975.700000  MA[40]=2975.725000\nCross Below\n[2017/05/17 19:00:55.835][I] [MACross] Raw: Short, rb1710, 1.0, 2975, 2017-05-16 19:49:15.500, 172386781, 1\n[2017/05/17 19:00:55.899][I] [MACross] Raw-Ack: Finished, Short, rb1710, 1.0, 2975, 1.0, 2975, 2017-05-16 19:49:15.500, 172386843, 1\nCLOSE=2975.000000  MA[10]=2975.600000  MA[40]=2975.725000\n......\nCLOSE=2976.000000  MA[10]=2975.900000  MA[40]=2975.800000\nCross Above\n[2017/05/17 19:01:00.851][I] [MACross] Raw: Cover, rb1710, 1.0, 2977, 2017-05-16 19:49:20.500, 172391796, 2\n[2017/05/17 19:01:00.852][I] [MACross] Raw: Buy, rb1710, 1.0, 2977, 2017-05-16 19:49:20.500, 172391796, 3\n[2017/05/17 19:01:00.903][I] [MACross] Raw-Ack: Finished, Cover, rb1710, 1.0, 2977, 1.0, 2977, 2017-05-16 19:49:20.500, 172391859, 2\n[2017/05/17 19:01:00.904][I] [MACross] Raw-Ack: Finished, Buy, rb1710, 1.0, 2977, 1.0, 2977, 2017-05-16 19:49:20.500, 172391859, 3\n\n\n\n\u7b49\u5f85\u7247\u523b\uff0c\u5982\u679c\u5747\u7ebf\u6709\u4ea4\u53c9\uff0c\u6211\u4eec\u5c31\u80fd\u770b\u5230PowerGate\u6309\u7167\u7b56\u7565\u7684\u6307\u793a\u4ea4\u6613\u6307\u5b9a\u5408\u7ea6\u3002\u5728\u7f51\u5173\u754c\u9762\u4e0a\u6211\u4eec\u80fd\u770b\u5230\u7b56\u7565\u7684\u4ed3\u4f4d\u4e00\u76f4\u5728\u7ffb\u8f6c\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u65f6\u65f6\u5728\u573a\u7684\u7b56\u7565\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u201c\u7b97\u6cd5\u4ea4\u6613\u7b56\u7565\u201d\u7684\u5f00\u53d1\u4e0e\u90e8\u7f72\u3002",
            "title": "\u5feb\u901f\u5f00\u59cb"
        },
        {
            "location": "/quickstart/#powergate",
            "text": "\u70b9\u51fb\u6b64\u5904 \u4e0b\u8f7dPowerGate\u7f51\u5173\u5b89\u88c5\u7a0b\u5e8f\u3002 \n   \u7f51\u5173\u7a0b\u5e8f\u7684\u5b89\u88c5\u8fc7\u7a0b\u4e0e\u666e\u901a\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u88c5\u8fc7\u7a0b\u4e00\u6837\uff0c\u5b83\u7684\u4f7f\u7528\u8bf4\u660e\u8bf7\u770b \u8fd9\u91cc \u3002  \n   PowerGate\u5185\u7f6e\u652f\u6301\u591a\u79cd\u4ea4\u6613\u901a\u9053\uff0c\u5728\u6b64\u6211\u4eec\u4f7f\u7528CTP\u671f\u8d27\u6a21\u62df\u901a\u9053\uff1a\u4e00\u662f\u56e0\u4e3a\u6a21\u62df\u901a\u9053\u53ef\u4ee5\u63d0\u4f9b7x24\u5c0f\u65f6\u670d\u52a1\uff1b\u4e8c\u662f\u56e0\u4e3aCTP\u671f\u8d27\u901a\u9053\u63d0\u4f9b\u6bcf\u79d2\u81f3\u5c11\u4e24\u6b21\u7684Tick\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u5feb\u5730\u770b\u5230\u7b56\u7565\u7684\u8fd0\u884c\u7ed3\u679c\u3002",
            "title": "\u5b89\u88c5PowerGate\u7f51\u5173"
        },
        {
            "location": "/quickstart/#python-sdk",
            "text": "\u70b9\u51fb\u6b64\u5904 \u4e0b\u8f7dPowerGate Python SDK\u3002 \n   \u76ee\u524dSDK\u652f\u6301Win32 Python27\u3002\u8bf7\u786e\u4fdd\u7535\u8111\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86Python27\uff0c\u5b89\u88c5\u7a0b\u5e8f \u70b9\u51fb\u6b64\u5904 \u4e0b\u8f7d\u3002",
            "title": "\u5b89\u88c5Python SDK"
        },
        {
            "location": "/quickstart/#_1",
            "text": "\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u201c\u5747\u7ebf\u91d1\u53c9\u6b7b\u53c9\u201d\u4ea4\u6613\u7b56\u7565\u3002 \n   \u7b56\u7565\u539f\u7406\u76f8\u5f53\u7b80\u5355\uff1a\u4ee5Tick\u6570\u636e\u4e3a\u57fa\u7840\uff0c\u5f5310\u5468\u671f\u5747\u7ebf\u4e0a\u7a7f40\u5468\u671f\u5747\u7ebf\u65f6\u505a\u591a\uff0c\u5f5310\u5468\u671f\u5747\u7ebf\u4e0b\u7a7f40\u5468\u671f\u5747\u7ebf\u65f6\u505a\u7a7a\uff0c\u6bcf\u6b21\u5747\u4ee5\u5bf9\u624b\u4ef7\u4e0b\u5355\u3002\uff08 \u8fd9\u662f\u4e00\u4e2a\u9ad8\u6548\u7684\u2018\u788e\u949e\u673a\u2019\uff0c\u6240\u4ee5\u5343\u4e07\u522b\u7528\u81ea\u5df1\u7684\u5b9e\u76d8\u8d26\u53f7\u8fd0\u884c\u8fd9\u4e2a\u7b56\u7565\uff01 \uff09 \n   \u6253\u5f00\u4f60\u559c\u7231\u7684\u4ee3\u7801\u7f16\u8f91\u5668\uff0c\u590d\u5236\u7c98\u8d34\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5e76\u4ee5\u6587\u4ef6\u540d\u201cmacross.py\u201d\u4fdd\u5b58\uff0c\u6216\u8005\u76f4\u63a5\u5230 \u6b64\u5904 \u4e0b\u8f7d\u4ee3\u7801\u3002      # -*- coding: utf-8 -*- \n    import math\n    from PowerGate import StrategyBase     #\u7b56\u7565\u57fa\u7c7b\n    from PowerGate import StrategyConfig   #\u7b56\u7565\u914d\u7f6e\n    from PowerGate import MA               #\u5747\u7ebf\n    from PowerGate import Cross            #\u5747\u7ebf\u7a7f\u8d8a\u9a8c\u8bc1\n\n    class MACross(StrategyBase):\n        def __init__(self, *args, **kwargs):\n            super(MACross, self).__init__(*args, **kwargs)\n            self.ma_short = MA()\n            self.ma_long = MA()\n\n        def onStart(self):\n            #\u83b7\u53d6Tick\u6700\u65b0\u4ef7\u6570\u636e\u5e8f\u5217,Tick\u6570\u636e\u5e8f\u5217\u4f1a\u88ab\u7cfb\u7edf\u81ea\u52a8\u586b\u5145\n            self.series = self.getTickSeries().getLastPriceDataSeries()\n\n            #\u4ee5Tick\u6700\u65b0\u4ef7\u6570\u636e\u5e8f\u5217\u548c\u76f8\u5e94\u5468\u671f\u521d\u59cb\u5316\u4e24\u6839\u5747\u7ebf\n            self.ma_short.init(self.series, 10)\n            self.ma_long.init(self.series, 40)\n\n        def onTick(self, tick):\n            #\u5982\u679c\u5747\u7ebf\u8fd8\u6ca1\u6709\u53ef\u7528\u7684\u8ba1\u7b97\u503c\uff0c\u76f4\u63a5\u8fd4\u56de\n            #ma_short\u7684\u5468\u671f\u53c2\u6570\u4e3a10\uff0c\u5f53Tick\u6700\u65b0\u4ef7\u6570\u636e\u5e8f\u5217\u88ab10\u4e2aTick\u586b\u5145\u65f6\uff0cma_short\u83b7\u5f97\u7b2c\u4e00\u4e2aMA\u503c\n            if math.isnan(self.ma_short[0]):\n                return\n\n            #ma_long\u7684\u5468\u671f\u53c2\u6570\u4e3a40\uff0c\u5f53Tick\u6700\u65b0\u4ef7\u6570\u636e\u5e8f\u5217\u88ab40\u4e2aTick\u586b\u5145\u65f6\uff0cma_short\u83b7\u5f97\u7b2c\u4e00\u4e2aMA\u503c\n            if math.isnan(self.ma_long[0]):\n                return\n\n            #\u6253\u5370Tick\u53ca\u4e24\u6761\u5747\u7ebf\u7684\u6700\u65b0\u503c\n            print('CLOSE=%f  MA[10]=%f  MA[40]=%f' % (tick.lastPrice, \n                                                      self.ma_short[0], \n                                                      self.ma_long[0]))\n            #\u77ed\u5747\u7ebf\u4e0a\u7a7f\u957f\u5747\u7ebf\n            if Cross.crossAbove(self.ma_short, self.ma_long): \n                print('Cross Above')\n                #\u4ee5\u7b56\u7565\u8ba2\u9605\u7684\u4e3b\u5408\u7ea6\u4e3a\u6807\u7684\uff0c\u505a\u591a1\u624b\n                self.openLong(self.getMainInstrument(), 1)\n            #\u77ed\u5747\u7ebf\u4e0b\u7a7f\u957f\u5747\u7ebf\n            elif Cross.crossBelow(self.ma_short, self.ma_long): \n                print('Cross Below')\n                #\u4ee5\u7b56\u7565\u8ba2\u9605\u7684\u4e3b\u5408\u7ea6\u4e3a\u6807\u7684\uff0c\u505a\u7a7a1\u624b\n                self.openShort(self.getMainInstrument(), 1)\n\n    if __name__ == '__main__':\n        config = StrategyConfig()\n        #\u8bbe\u7f6e\u7b56\u7565\u540d\u79f0\uff0c\u6bcf\u4e2a\u7b56\u7565\u5fc5\u987b\u6709\u4e00\u4e2a\u540d\u79f0\n        config.setName('MACross')\n        #\u5982\u679c\u53ea\u8ba2\u9605\u4e00\u4e2a\u5408\u7ea6\uff0c\u90a3\u4e48\u8be5\u5408\u7ea6\u5c31\u662f\u7b56\u7565\u4e3b\u5408\u7ea6\uff0c\u5426\u5219\u7b2c\u4e00\u4e2a\u8ba2\u9605\u7684\u5408\u7ea6\u4e3a\u7b56\u7565\u4e3b\u5408\u7ea6\n        config.subscribe(\"rb1710\")\n\n        #\u7b56\u7565\u5b9e\u4f8b\n        strategy = MACross()\n        #\u8fd0\u884c\u7b56\u7565  \n        strategy.run(config)         \n        #\u7b49\u5f85\u7528\u6237\u8f93\u5165\n        raw_input()\n        #\u505c\u6b62\u7b56\u7565\n        strategy.stop()",
            "title": "\u7f16\u5199\u7b56\u7565"
        },
        {
            "location": "/quickstart/#powergate_1",
            "text": "\u8bf7\u4ee5CTP\u6a21\u62df\u8d26\u6237\u767b\u5f55PowerGate\u7f51\u5173\u7a0b\u5e8f\u3002\u5982\u679c\u6ca1\u6709\u6a21\u62df\u8d26\u6237\uff0c\u8bf7\u5230 SimNow\u7f51\u7ad9 \u6ce8\u518c\u3002",
            "title": "\u8fd0\u884cPowerGate\u7f51\u5173"
        },
        {
            "location": "/quickstart/#_2",
            "text": "\u7f51\u5173\u7a0b\u5e8f\u542f\u52a8\u5b8c\u6bd5\uff0c\u6253\u5f00\u547d\u4ee4\u884c\u7a97\u53e3\uff0c\u8fd0\u884c\u4ea4\u6613\u7b56\u7565\uff1a      python macross.py  \u7b56\u7565\u8fd0\u884c\u65f6\u7684\u8f93\u51fa\u5982\u4e0b\uff1a  [2017/05/17 19:00:26.465][I] +===============================================================+\n[2017/05/17 19:00:26.465][I] *   ALGORITHMIC STRATEGY ENGINE [build: May 17 2017 08:22:36]   *\n[2017/05/17 19:00:26.465][I] +===============================================================+\n[2017/05/17 19:00:26.465][I] Engine initializing...\n[2017/05/17 19:00:26.465][W] Could not load data dictionary!\n[2017/05/17 19:00:26.465][I] Load timer service 'SysTimer' done.\n[2017/05/17 19:00:26.465][I] Load market data service 'RemoteMD' done.\n[2017/05/17 19:00:26.465][I] Load order execution service 'RemoteExec' done.\n[2017/05/17 19:00:26.465][I] Total services loaded: 3.\n[2017/05/17 19:00:26.465][I] Load strategy 'MACross' succeed!\n[2017/05/17 19:00:26.465][I] Connect to remote engine at address 127.0.0.1:5501...\n[2017/05/17 19:00:26.554][I] Trading Account Detail [SrvID: 0]:\n=======================================\n     Account ID: xxxxxx\n        Balance: 1284363.160000\n   Realized P/L: 0.000000\n        MTM P/L: 480.000000\n  Client Equity: 1284363.160000\n     Commission: 0.000000\nMargin Occupied: 171002.000000\n     Fund Avail: 988639.160000\n    Risk Degree: 0.000000\n=======================================\n[2017/05/17 19:00:26.555][I] Execution service 'RemoteExec' ready.\n[2017/05/17 19:00:26.555][I] Check auto start...\n[2017/05/17 19:00:26.555][I] Total runtime number: 1.\n[2017/05/17 19:00:26.555][I] Strategy 'MACross' loading...\nCLOSE=2976.000000  MA[10]=2975.900000  MA[40]=2975.550000\n......\nCLOSE=2975.000000  MA[10]=2975.700000  MA[40]=2975.725000\nCross Below\n[2017/05/17 19:00:55.835][I] [MACross] Raw: Short, rb1710, 1.0, 2975, 2017-05-16 19:49:15.500, 172386781, 1\n[2017/05/17 19:00:55.899][I] [MACross] Raw-Ack: Finished, Short, rb1710, 1.0, 2975, 1.0, 2975, 2017-05-16 19:49:15.500, 172386843, 1\nCLOSE=2975.000000  MA[10]=2975.600000  MA[40]=2975.725000\n......\nCLOSE=2976.000000  MA[10]=2975.900000  MA[40]=2975.800000\nCross Above\n[2017/05/17 19:01:00.851][I] [MACross] Raw: Cover, rb1710, 1.0, 2977, 2017-05-16 19:49:20.500, 172391796, 2\n[2017/05/17 19:01:00.852][I] [MACross] Raw: Buy, rb1710, 1.0, 2977, 2017-05-16 19:49:20.500, 172391796, 3\n[2017/05/17 19:01:00.903][I] [MACross] Raw-Ack: Finished, Cover, rb1710, 1.0, 2977, 1.0, 2977, 2017-05-16 19:49:20.500, 172391859, 2\n[2017/05/17 19:01:00.904][I] [MACross] Raw-Ack: Finished, Buy, rb1710, 1.0, 2977, 1.0, 2977, 2017-05-16 19:49:20.500, 172391859, 3  \u7b49\u5f85\u7247\u523b\uff0c\u5982\u679c\u5747\u7ebf\u6709\u4ea4\u53c9\uff0c\u6211\u4eec\u5c31\u80fd\u770b\u5230PowerGate\u6309\u7167\u7b56\u7565\u7684\u6307\u793a\u4ea4\u6613\u6307\u5b9a\u5408\u7ea6\u3002\u5728\u7f51\u5173\u754c\u9762\u4e0a\u6211\u4eec\u80fd\u770b\u5230\u7b56\u7565\u7684\u4ed3\u4f4d\u4e00\u76f4\u5728\u7ffb\u8f6c\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u65f6\u65f6\u5728\u573a\u7684\u7b56\u7565\u3002 \n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u201c\u7b97\u6cd5\u4ea4\u6613\u7b56\u7565\u201d\u7684\u5f00\u53d1\u4e0e\u90e8\u7f72\u3002",
            "title": "\u8fd0\u884c\u7b56\u7565"
        },
        {
            "location": "/concept/",
            "text": "\u8fd0\u884c\u6a21\u5f0f\n\n\nPowerGate\u652f\u6301\u4ee5\u4e24\u79cd\u6a21\u5f0f\u8fd0\u884c\u4ea4\u6613\u7b56\u7565\uff1a\n\n\u4e00\u662f\u7b56\u7565\u4ee5\u52a8\u6001\u94fe\u63a5\u5e93\uff08.dll\u6216.so\uff09\u5f62\u5f0f\u5b58\u5728\uff0cPowerGate\u7f51\u5173\u76f4\u63a5\u5c06\u5176\u52a0\u8f7d\u5230\u8fdb\u7a0b\u5185\u90e8\u3002 \n\n\n            +--------------------------+\n            |              +--------+  |\n            |              |Strategy|  |\n            |              +--------+  |\n            |              +--------+  |\n            | PowerGate    |Strategy|  |\n            |              +--------+  |\n            |              +--------+  |\n            |              |Strategy|  |\n            |              +--------+  |\n            +--------------------------+\n\n\n\n\u4e8c\u662f\u7b56\u7565\u4ee5\u72ec\u7acb\u8fdb\u7a0b\u5b58\u5728\uff0cPowerGate\u7f51\u5173\u901a\u8fc7\u7f51\u7edc\u4e3a\u7b56\u7565\u63d0\u4f9b\u8fd0\u884c\u73af\u5883\uff0c\u4e5f\u5c31\u662f\u5178\u578b\u7684Client/Server\u6a21\u5f0f\u3002  \n\n\n            +------------+\n            |            |          +--------+\n            |            |<-------->|Strategy|\n            |            |          +--------+\n            |            |          +--------+\n            | PowerGate  |<-------->|Strategy|\n            |            |          +--------+\n            |            |          +--------+\n            |            |<-------->|Strategy|\n            |            |          +--------+\n            +------------+\n\n\n\nPowerGate\u9ed8\u8ba4\u4ee5\u7b2c\u4e8c\u79cd\u6a21\u5f0f\u8fd0\u884c\u3002\u7f51\u5173\u7a0b\u5e8f\u7684\u9ed8\u8ba4\u76d1\u542c\u7aef\u53e3\u4e3a5501\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u767b\u5f55\u754c\u9762\u7684\u201c\u8bbe\u7f6e\u201d\u6309\u94ae\u4fee\u6539\u76d1\u542c\u7aef\u53e3\u3002\n\n\n\u4e8b\u4ef6\u9a71\u52a8\n\n\n\u7b56\u7565\u4ee5\u201c\u4e8b\u4ef6\u9a71\u52a8\u201d\u7684\u65b9\u5f0f\u8fd0\u884c\u3002\u7528\u6237\u7ee7\u627fSDK\u63d0\u4f9b\u7684\u7b56\u7565\u7236\u7c7b\u4e4b\u540e\uff0c\u6839\u636e\u9700\u8981\u5b9e\u73b0\u76f8\u5e94\u7684\u4e8b\u4ef6\u63a5\u53e3\uff0c\u5f53\u5bf9\u5e94\u7684\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u7b56\u7565\u7684\u4e8b\u4ef6\u63a5\u53e3\u4f1a\u88ab\u8c03\u7528\u3002\n\n\u4f8b\u5982\u7528\u6237\u5bf9Tick\u884c\u60c5\u6570\u636e\u611f\u5174\u8da3\uff0c\u53ea\u8981\u5b9e\u73b0onTick()\u63a5\u53e3\uff0c\u5f53\u6709Tick\u6570\u636e\u5230\u6765\u65f6\uff0conTick()\u5c31\u4f1a\u88ab\u8c03\u7528\u3002\n\n\u7528\u6237\u53ef\u4ee5\u5728PowerGate\u7684\u754c\u9762\u4e0a\u63a7\u5236\u7b56\u7565\u7684\u8fd0\u884c\u4e0e\u505c\u6b62\uff0c\u5f53\u7b56\u7565\u542f\u52a8\u6216\u505c\u6b62\u65f6\uff0c\u5bf9\u5e94\u7684\u56de\u8c03\u51fd\u6570\u4e5f\u4f1a\u88ab\u8c03\u7528\u3002\n\n\u5728\u4e8b\u4ef6\u9a71\u52a8\u7684\u6a21\u5f0f\u4e0b\uff0c\u4e00\u4e2a\u4ea4\u6613\u7b56\u7565\u7684\u5178\u578b\u751f\u547d\u5468\u671f\u5982\u4e0b\uff1a  \n\n\n    +-------+         +-----------+                                    +-----------+\n    | User  |         | PowerGate |                                    | Strategy  |\n    +-------+         +-----------+                                    +-----------+\n        |                   |                                                |\n        | \u52a0\u8f7d\u7b56\u7565           |                                                |\n        |----------------->>|                                                |\n        |                   |                                                |\n        |                   |                                    onCreate()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        | \u542f\u52a8\u7b56\u7565           |                                                |\n        |----------------->>|                                                |\n        |                   |                                                |\n        |                   |                              onSetParameter()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |                                     onStart()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |                                      onTick()  |  # \u5982\u679c\u7b56\u7565\u8ba2\u9605\u4e86Tick\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |                                       onBar()  |  # \u5982\u679c\u7b56\u7565\u8ba2\u9605\u4e86Bar\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |  buy()/sell()/sellShort()/cover()              |  # \u7b56\u7565\u53d1\u9001\u62a5\u5355\n        |                   |<<----------------------------------------------|\n        |                   |                                                |\n        |                   |                            onOrderSubmitted()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |            onOrderUpdated()/onOrderRejected()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |                           onExecutionReport()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |      onOrderPartiallyFilled()/onOrderFilled()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        | \u505c\u6b62\u7b56\u7565           |                                                |\n        |----------------->>|                                                |\n        |                   |                                                |\n        |                   |                                      onStop()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |                                    onDestory() |\n        |                   |----------------------------------------------->|\n        |                   |                                                |\n\n\n\n\u6570\u636e\u5e8f\u5217\n\n\nPowerGate\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u7528\u7684\u62bd\u8c61\uff1a\u6570\u636e\u65f6\u95f4\u5e8f\u5217\uff08DataSeries\uff09\u3002\n\n\u4f8b\u5982\uff0c\u7528\u6237\u9700\u8981\u8ba2\u9605\u67d0\u5408\u7ea6\u7684\u4e00\u5206\u949f\u6570\u636e\uff0c\u53ea\u8981\u5728\u7b56\u7565\u914d\u7f6e\u4e2d\u5199\uff1a  \n\n\nconfig.subscribe(\"ABC\", Resolution.MINUTE, 1)\n\n\n\n\u7cfb\u7edf\u4f1a\u4e3a\u7b56\u7565\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u5468\u671f\u4e3a1\u5206\u949f\u7684\"ABC\"\u5408\u7ea6\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u8fd9\u4e2a\u5e8f\u5217\u4f1a\u88ab\u81ea\u52a8\u586b\u5145\u3002\u5f53\u6709\u5206\u949f\u6570\u636e\u751f\u6210\u65f6\uff0c\u5e8f\u5217\u7684\u7b2c0\u4e2a\u6570\u636e\u5c31\u662f\u6700\u65b0\u6570\u636e\u3002\n\n\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u80fd\u88ab\u7528\u4e8e\u5404\u79cd\u8fd0\u7b97\uff0c\u5982\uff1a\u5224\u65ad\u76f8\u4e92\u7a7f\u8d8a\uff0c\u7528\u4e8e\u4f20\u9012\u7ed9\u6280\u672f\u6307\u6807\u5982MA\u3001EMA\u7b49\u3002\n\n\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u4e2a\u6570\u636e\u5e8f\u5217\u4e0a\u8ba1\u7b97\u5468\u671f\u4e3a10\u7684SMA\u6307\u6807\uff1a  \n\n\nfrom PowerGate import SMA\nsma = SMA()\nsma.init(series, 10)\n\n\n\n\u5f53\u6709\u65b0\u6570\u636e\u88ab\u586b\u5145\u8fdb\u5e8f\u5217\u65f6\uff0c\u6570\u636e\u5e8f\u5217\u4f1a\u81ea\u52a8\u89e6\u53d1\u6307\u6807\u8fdb\u884c\u8ba1\u7b97\u3002\u7528\u6237\u5728\u521d\u59cb\u5316\u5b8c\u6307\u6807\u4e4b\u540e\uff0c\u6307\u6807\u4f1a\u81ea\u52a8\u63a5\u6536\u6570\u636e\u8ba1\u7b97\u6700\u65b0\u503c\u3002\n\n\n\u7b56\u7565\u6301\u4ed3\n\n\nPowerGate\u652f\u6301\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7b56\u7565\uff0c\u4e0d\u540c\u4e8e\u8d26\u6237\u6301\u4ed3\uff0c\u6bcf\u4e2a\u7b56\u7565\u90fd\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u6301\u4ed3\u3002\n\n\u5f53\u7b56\u7565\u5f00\u4ed3\u65f6\uff0c\u6240\u5f00\u7684\u4ed3\u4f4d\u4f1a\u88ab\u5206\u914d\u7ed9\u8fd9\u4e2a\u7b56\u7565\u3002PowerGate\u7f51\u5173\u8bb0\u5f55\u6bcf\u4e2a\u7b56\u7565\u7684\u6301\u4ed3\u6570\u91cf\uff0c\u7b56\u7565\u9ed8\u8ba4\u53ea\u80fd\u5e73\u6389\u5c5e\u4e8e\u81ea\u5df1\u7684\u6301\u4ed3\u3002\n\n\u7528\u6237\u53ef\u4ee5\u5728\u7f51\u5173\u754c\u9762\u4e0a\u6216\u8005\u5728\u7b56\u7565\u5185\u90e8\u4e3a\u7b56\u7565\u5206\u914d\u6301\u4ed3\u3002",
            "title": "\u91cd\u8981\u6982\u5ff5"
        },
        {
            "location": "/concept/#_1",
            "text": "PowerGate\u652f\u6301\u4ee5\u4e24\u79cd\u6a21\u5f0f\u8fd0\u884c\u4ea4\u6613\u7b56\u7565\uff1a \n\u4e00\u662f\u7b56\u7565\u4ee5\u52a8\u6001\u94fe\u63a5\u5e93\uff08.dll\u6216.so\uff09\u5f62\u5f0f\u5b58\u5728\uff0cPowerGate\u7f51\u5173\u76f4\u63a5\u5c06\u5176\u52a0\u8f7d\u5230\u8fdb\u7a0b\u5185\u90e8\u3002               +--------------------------+\n            |              +--------+  |\n            |              |Strategy|  |\n            |              +--------+  |\n            |              +--------+  |\n            | PowerGate    |Strategy|  |\n            |              +--------+  |\n            |              +--------+  |\n            |              |Strategy|  |\n            |              +--------+  |\n            +--------------------------+  \u4e8c\u662f\u7b56\u7565\u4ee5\u72ec\u7acb\u8fdb\u7a0b\u5b58\u5728\uff0cPowerGate\u7f51\u5173\u901a\u8fc7\u7f51\u7edc\u4e3a\u7b56\u7565\u63d0\u4f9b\u8fd0\u884c\u73af\u5883\uff0c\u4e5f\u5c31\u662f\u5178\u578b\u7684Client/Server\u6a21\u5f0f\u3002                +------------+\n            |            |          +--------+\n            |            |<-------->|Strategy|\n            |            |          +--------+\n            |            |          +--------+\n            | PowerGate  |<-------->|Strategy|\n            |            |          +--------+\n            |            |          +--------+\n            |            |<-------->|Strategy|\n            |            |          +--------+\n            +------------+  PowerGate\u9ed8\u8ba4\u4ee5\u7b2c\u4e8c\u79cd\u6a21\u5f0f\u8fd0\u884c\u3002\u7f51\u5173\u7a0b\u5e8f\u7684\u9ed8\u8ba4\u76d1\u542c\u7aef\u53e3\u4e3a5501\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u767b\u5f55\u754c\u9762\u7684\u201c\u8bbe\u7f6e\u201d\u6309\u94ae\u4fee\u6539\u76d1\u542c\u7aef\u53e3\u3002",
            "title": "\u8fd0\u884c\u6a21\u5f0f"
        },
        {
            "location": "/concept/#_2",
            "text": "\u7b56\u7565\u4ee5\u201c\u4e8b\u4ef6\u9a71\u52a8\u201d\u7684\u65b9\u5f0f\u8fd0\u884c\u3002\u7528\u6237\u7ee7\u627fSDK\u63d0\u4f9b\u7684\u7b56\u7565\u7236\u7c7b\u4e4b\u540e\uff0c\u6839\u636e\u9700\u8981\u5b9e\u73b0\u76f8\u5e94\u7684\u4e8b\u4ef6\u63a5\u53e3\uff0c\u5f53\u5bf9\u5e94\u7684\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u7b56\u7565\u7684\u4e8b\u4ef6\u63a5\u53e3\u4f1a\u88ab\u8c03\u7528\u3002 \n\u4f8b\u5982\u7528\u6237\u5bf9Tick\u884c\u60c5\u6570\u636e\u611f\u5174\u8da3\uff0c\u53ea\u8981\u5b9e\u73b0onTick()\u63a5\u53e3\uff0c\u5f53\u6709Tick\u6570\u636e\u5230\u6765\u65f6\uff0conTick()\u5c31\u4f1a\u88ab\u8c03\u7528\u3002 \n\u7528\u6237\u53ef\u4ee5\u5728PowerGate\u7684\u754c\u9762\u4e0a\u63a7\u5236\u7b56\u7565\u7684\u8fd0\u884c\u4e0e\u505c\u6b62\uff0c\u5f53\u7b56\u7565\u542f\u52a8\u6216\u505c\u6b62\u65f6\uff0c\u5bf9\u5e94\u7684\u56de\u8c03\u51fd\u6570\u4e5f\u4f1a\u88ab\u8c03\u7528\u3002 \n\u5728\u4e8b\u4ef6\u9a71\u52a8\u7684\u6a21\u5f0f\u4e0b\uff0c\u4e00\u4e2a\u4ea4\u6613\u7b56\u7565\u7684\u5178\u578b\u751f\u547d\u5468\u671f\u5982\u4e0b\uff1a        +-------+         +-----------+                                    +-----------+\n    | User  |         | PowerGate |                                    | Strategy  |\n    +-------+         +-----------+                                    +-----------+\n        |                   |                                                |\n        | \u52a0\u8f7d\u7b56\u7565           |                                                |\n        |----------------->>|                                                |\n        |                   |                                                |\n        |                   |                                    onCreate()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        | \u542f\u52a8\u7b56\u7565           |                                                |\n        |----------------->>|                                                |\n        |                   |                                                |\n        |                   |                              onSetParameter()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |                                     onStart()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |                                      onTick()  |  # \u5982\u679c\u7b56\u7565\u8ba2\u9605\u4e86Tick\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |                                       onBar()  |  # \u5982\u679c\u7b56\u7565\u8ba2\u9605\u4e86Bar\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |  buy()/sell()/sellShort()/cover()              |  # \u7b56\u7565\u53d1\u9001\u62a5\u5355\n        |                   |<<----------------------------------------------|\n        |                   |                                                |\n        |                   |                            onOrderSubmitted()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |            onOrderUpdated()/onOrderRejected()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |                           onExecutionReport()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |      onOrderPartiallyFilled()/onOrderFilled()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        | \u505c\u6b62\u7b56\u7565           |                                                |\n        |----------------->>|                                                |\n        |                   |                                                |\n        |                   |                                      onStop()  |\n        |                   |---------------------------------------------->>|\n        |                   |                                                |\n        |                   |                                    onDestory() |\n        |                   |----------------------------------------------->|\n        |                   |                                                |",
            "title": "\u4e8b\u4ef6\u9a71\u52a8"
        },
        {
            "location": "/concept/#_3",
            "text": "PowerGate\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u7528\u7684\u62bd\u8c61\uff1a\u6570\u636e\u65f6\u95f4\u5e8f\u5217\uff08DataSeries\uff09\u3002 \n\u4f8b\u5982\uff0c\u7528\u6237\u9700\u8981\u8ba2\u9605\u67d0\u5408\u7ea6\u7684\u4e00\u5206\u949f\u6570\u636e\uff0c\u53ea\u8981\u5728\u7b56\u7565\u914d\u7f6e\u4e2d\u5199\uff1a    config.subscribe(\"ABC\", Resolution.MINUTE, 1)  \u7cfb\u7edf\u4f1a\u4e3a\u7b56\u7565\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u5468\u671f\u4e3a1\u5206\u949f\u7684\"ABC\"\u5408\u7ea6\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u8fd9\u4e2a\u5e8f\u5217\u4f1a\u88ab\u81ea\u52a8\u586b\u5145\u3002\u5f53\u6709\u5206\u949f\u6570\u636e\u751f\u6210\u65f6\uff0c\u5e8f\u5217\u7684\u7b2c0\u4e2a\u6570\u636e\u5c31\u662f\u6700\u65b0\u6570\u636e\u3002 \n\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u80fd\u88ab\u7528\u4e8e\u5404\u79cd\u8fd0\u7b97\uff0c\u5982\uff1a\u5224\u65ad\u76f8\u4e92\u7a7f\u8d8a\uff0c\u7528\u4e8e\u4f20\u9012\u7ed9\u6280\u672f\u6307\u6807\u5982MA\u3001EMA\u7b49\u3002 \n\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u4e2a\u6570\u636e\u5e8f\u5217\u4e0a\u8ba1\u7b97\u5468\u671f\u4e3a10\u7684SMA\u6307\u6807\uff1a    from PowerGate import SMA\nsma = SMA()\nsma.init(series, 10)  \u5f53\u6709\u65b0\u6570\u636e\u88ab\u586b\u5145\u8fdb\u5e8f\u5217\u65f6\uff0c\u6570\u636e\u5e8f\u5217\u4f1a\u81ea\u52a8\u89e6\u53d1\u6307\u6807\u8fdb\u884c\u8ba1\u7b97\u3002\u7528\u6237\u5728\u521d\u59cb\u5316\u5b8c\u6307\u6807\u4e4b\u540e\uff0c\u6307\u6807\u4f1a\u81ea\u52a8\u63a5\u6536\u6570\u636e\u8ba1\u7b97\u6700\u65b0\u503c\u3002",
            "title": "\u6570\u636e\u5e8f\u5217"
        },
        {
            "location": "/concept/#_4",
            "text": "PowerGate\u652f\u6301\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7b56\u7565\uff0c\u4e0d\u540c\u4e8e\u8d26\u6237\u6301\u4ed3\uff0c\u6bcf\u4e2a\u7b56\u7565\u90fd\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u6301\u4ed3\u3002 \n\u5f53\u7b56\u7565\u5f00\u4ed3\u65f6\uff0c\u6240\u5f00\u7684\u4ed3\u4f4d\u4f1a\u88ab\u5206\u914d\u7ed9\u8fd9\u4e2a\u7b56\u7565\u3002PowerGate\u7f51\u5173\u8bb0\u5f55\u6bcf\u4e2a\u7b56\u7565\u7684\u6301\u4ed3\u6570\u91cf\uff0c\u7b56\u7565\u9ed8\u8ba4\u53ea\u80fd\u5e73\u6389\u5c5e\u4e8e\u81ea\u5df1\u7684\u6301\u4ed3\u3002 \n\u7528\u6237\u53ef\u4ee5\u5728\u7f51\u5173\u754c\u9762\u4e0a\u6216\u8005\u5728\u7b56\u7565\u5185\u90e8\u4e3a\u7b56\u7565\u5206\u914d\u6301\u4ed3\u3002",
            "title": "\u7b56\u7565\u6301\u4ed3"
        },
        {
            "location": "/terminal/",
            "text": "\u5b89\u88c5\n\n\n\u7f51\u5173\u7a0b\u5e8f\u7684\u5b89\u88c5\u8fc7\u7a0b\u4e0e\u666e\u901a\u7a0b\u5e8f\u4e00\u6837\u3002\u7f51\u5173\u7a0b\u5e8f\n\u70b9\u51fb\u6b64\u5904\n\u4e0b\u8f7d\u3002\n\n\u5982\u679c\u5b89\u88c5\u4e4b\u540e\u65e0\u6cd5\u6b63\u5e38\u542f\u52a8\uff0c\u63d0\u793a\u7f3a\u5c11\u67d0\u4e2adll\uff0c\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u6ca1\u6709\u5b89\u88c5\u201cVisual C++ Redistributable for Visual Studio 2015\u201d\uff0c\u53ef\u4ee5\n\u70b9\u51fb\u6b64\u5904\n\u4e0b\u8f7d\u5b89\u88c5\u3002\n\n\n\u767b\u5f55\u754c\u9762\n\n\nPowerGate\u7f51\u5173\u7a0b\u5e8f\u7684\u767b\u5f55\u754c\u9762\u5982\u4e0b\u6240\u793a\u3002\n\n\n   \n\n\n\u5982\u679c\u7528\u6237\u9009\u4e2d\u201c\u8bb0\u4f4f\u201d\u9009\u9879\uff0c\u7f51\u5173\u7a0b\u5e8f\u4f1a\u8bb0\u4f4f\u7528\u6237\u6b64\u6b21\u7684\u767b\u5f55\u540d\u3002\n\n\n\u7f16\u8f91\u7ecf\u7eaa\u5546\n\n\n\u70b9\u51fb\u767b\u5f55\u754c\u9762\u7684\u201c\u7f16\u8f91\u201d\u6309\u94ae\uff0c\u7528\u6237\u53ef\u4ee5\u7f16\u8f91\u3001\u5220\u9664\u3001\u521b\u5efa\u7ecf\u7eaa\u5546\u914d\u7f6e\u3002  \n\n\n  \n\n\n\u5982\u679c\u7528\u6237\u9700\u8981\u521b\u5efa\u65b0\u7684\u7ecf\u7eaa\u5546\u914d\u7f6e\uff0c\u53ef\u4ee5\u70b9\u51fb\u7a97\u53e3\u5de6\u4e0b\u89d2\u7684\u201c\u65b0\u5efa\u201d\u6309\u94ae\u3002\u586b\u5199\u5b8c\u6210\u6240\u6709\u7684\u914d\u7f6e\u4fe1\u606f\u4e4b\u540e\uff0c\u70b9\u51fb\u201c\u786e\u8ba4\u201d\u5373\u53ef\u3002\n\n\n\u8bbe\u7f6e\u9009\u9879\n\n\n\u70b9\u51fb\u767b\u5f55\u754c\u9762\u7684\u201c\u8bbe\u7f6e\u201d\u6309\u94ae\uff0c\u7528\u6237\u53ef\u4ee5\u8bbe\u7f6ePowerGate\u7f51\u5173\u7a0b\u5e8f\u3002  \n\n\n \n\n\n\u8bbe\u7f6e\u9009\u9879\u5305\u62ec\uff1a\n\n\n\n\n\u670d\u52a1\u7aef\u53e3\uff1aPowerGate\u7f51\u5173\u7684\u76d1\u542c\u5546\u54c1\uff0c\u9ed8\u8ba4\u4e3a5501\u3002\n\n\n\u5e95\u5c42\u901a\u9053\uff1a\u884c\u60c5\u6570\u636e\u53ca\u8ba2\u5355\u6267\u884c\u670d\u52a1\u6240\u5728\u7684\u901a\u9053\u3002\n\n\n\u5185\u7f6e\u7b97\u6cd5\uff1a\u662f\u5426\u5f00\u542f\u5185\u7f6e\u7b97\u6cd5\u4ea4\u6613\u529f\u80fd\u3002\n\n\n\u591a\u8d26\u6237\uff1a\u662f\u5426\u5f00\u542f\u591a\u8d26\u6237\u652f\u6301\u529f\u80fd\u3002\n\n\n\u672c\u5730\u52a0\u8f7d\uff1a\u662f\u5426\u5f00\u542f\u4ee5\u52a8\u6001\u94fe\u63a5\u5e93\u5f62\u5f0f\u52a0\u8f7d\u7b56\u7565\u529f\u80fd\u3002  \n\n\n\n\n\u90e8\u5206\u9009\u9879\u5728\u4e00\u4e9b\u7248\u672c\u4e2d\u53ef\u80fd\u672a\u542f\u7528\u3002\n\n\n\u4e3b\u754c\u9762\n\n\nPowerGate\u7f51\u5173\u7a0b\u5e8f\u8fd0\u884c\u7528\u6237\u7684\u7b97\u6cd5\u4ea4\u6613\u7b56\u7565\u3002\u5728\u767b\u5f55\u8d26\u6237\u4e4b\u540e\uff0c\u7f51\u5173\u7a0b\u5e8f\u7684\u4e3b\u754c\u9762\u5982\u4e0b\u56fe\u6240\u793a\u3002  \n\n\n  \n\n\n\u7f51\u5173\u7a0b\u5e8f\u4e3b\u754c\u9762\u4e0a\u67096\u4e2a\u9762\u677f\uff0c\u5305\u62ec\uff1a  \n\n\n\n\n\u8d26\u6237\u4fe1\u606f\u9762\u677f\n\n  \u663e\u793a\u7528\u6237\u7684\u8d26\u6237\u4fe1\u606f\u3002  \n\n\n\u884c\u60c5\u6570\u636e\u9762\u677f\n\n  \u663e\u793a\u7528\u6237\u6216\u7b56\u7565\u8ba2\u9605\u7684\u884c\u60c5\u6570\u636e\u3002  \n\n\n\u7b56\u7565\u76d1\u63a7\u9762\u677f\n\n  \u5728\u8fd9\u4e2a\u9762\u677f\u4e2d\uff0c\u7528\u6237\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u52a0\u8f7d\u7684\u7b56\u7565\u3002\u901a\u8fc7\u8be5\u9762\u677f\u7684\u76f8\u5e94\u680f\u4f4d\uff0c\u7528\u6237\u53ef\u4ee5\u542f\u52a8\u3001\u505c\u6b62\u7b56\u7565\uff0c\u67e5\u770b\u5f53\u524d\u7b56\u7565\u7684\u6301\u4ed3\u3001\u65e5\u5fd7\uff0c\u4e3a\u7b56\u7565\u5206\u914d\u4ed3\u4f4d\uff0c\u5411\u7b56\u7565\u53d1\u9001\u547d\u4ee4\u7b49\u3002  \n\n\n\u62a5\u5355\u4fe1\u606f\u9762\u677f\n\n  \u663e\u793a\u5f53\u524d\u8d26\u6237\u7684\u6240\u6709\u62a5\u5355\u4fe1\u606f\u3002  \n\n\n\u65e5\u5fd7\u9762\u677f\n\n  \u663e\u793a\u7f51\u5173\u7a0b\u5e8f\u7684\u65e5\u5fd7\u3002  \n\n\n\u6301\u4ed3\u9762\u677f\n\n  \u663e\u793a\u5f53\u524d\u8d26\u6237\u7684\u6240\u6709\u6301\u4ed3\u4fe1\u606f\u3002  \n\n\n\n\n\u8fd9\u51e0\u4e2a\u9762\u677f\u53ef\u4ee5\u901a\u8fc7\u62d6\u62c9\u9762\u677f\u8fb9\u754c\u663e\u793a\u548c\u9690\u85cf\u3002  \n\n\n\u4ea4\u6613\u9762\u677f\n\n\n\u5728\u884c\u60c5\u9762\u677f\u4e0a\u53cc\u51fb\u5408\u7ea6\uff0c\u6216\u8005\u70b9\u51fb\u201c\u6301\u4ed3\u5217\u8868\u201d\u4e0b\u65b9\u7684\u201c\u4ea4\u6613\u9762\u677f\u201d\u6309\u94ae\uff0c\u4f1a\u5f39\u51fa\u201c\u4ea4\u6613\u9762\u677f\u201d\u3002\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u201c\u4ea4\u6613\u9762\u677f\u201d\u624b\u52a8\u4ea4\u6613\u3002  \n\n\n  \n\n\n\u884c\u60c5\u8ba2\u9605\n\n\n\u5728\u884c\u60c5\u9762\u677f\u4e2d\u70b9\u51fb\u53f3\u952e\uff0c\u5728\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u8ba2\u9605\u5408\u7ea6\u201d\uff0c\u4f1a\u5f39\u51fa\u5408\u7ea6\u8ba2\u9605\u7a97\u53e3\uff0c\u7528\u6237\u8f93\u5165\u5408\u7ea6\u540d\u4e4b\u540e\u70b9\u51fb\u786e\u8ba4\uff0cPowerGate\u4f1a\u5c1d\u8bd5\u8ba2\u9605\u6307\u5b9a\u5408\u7ea6\u3002\n\n\u5408\u7ea6\u8ba2\u9605\u6210\u529f\u4e0e\u5426\uff0c\u53d6\u51b3\u4e8e\u5e95\u5c42\u7684\u884c\u60c5\u670d\u52a1\u662f\u5426\u652f\u6301\u8be5\u5408\u7ea6\u3002\u4f8b\u5982\uff0c\u671f\u8d27CTP\u7684\u884c\u60c5\u670d\u52a1\u5c31\u65e0\u6cd5\u8ba2\u9605\u80a1\u7968\u884c\u60c5\u3002  \n\n\n  \n\n\n\u6df1\u5ea6\u884c\u60c5\n\n\n\u5728\u884c\u60c5\u9762\u677f\u4e2d\u70b9\u51fb\u53f3\u952e\uff0c\u5728\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u6df1\u5ea6\u884c\u60c5\u201d\uff0c\u4f1a\u5f39\u51fa\u6df1\u5ea6\u884c\u60c5\u7a97\u53e3\u3002\u53ea\u6709\u5e95\u5c42\u7684\u884c\u60c5\u670d\u52a1\u63d0\u4f9b\u6df1\u5ea6\u884c\u60c5\uff0c\u7a97\u53e3\u4e2d\u624d\u4f1a\u663e\u793a\u6df1\u5ea6\u884c\u60c5\u6570\u636e\u3002\n\n\u4e0b\u56fe\u662fPowerGate\u63a5\u5165\u5174\u4e1a\u8bc1\u5238UT level2\u884c\u60c5\u65f6\uff0c\u6df1\u5ea6\u884c\u60c5\u7a97\u53e3\u663e\u793a\u7684\u6570\u636e\u3002",
            "title": "\u7f51\u5173\u7a0b\u5e8f"
        },
        {
            "location": "/terminal/#_1",
            "text": "\u7f51\u5173\u7a0b\u5e8f\u7684\u5b89\u88c5\u8fc7\u7a0b\u4e0e\u666e\u901a\u7a0b\u5e8f\u4e00\u6837\u3002\u7f51\u5173\u7a0b\u5e8f \u70b9\u51fb\u6b64\u5904 \u4e0b\u8f7d\u3002 \n\u5982\u679c\u5b89\u88c5\u4e4b\u540e\u65e0\u6cd5\u6b63\u5e38\u542f\u52a8\uff0c\u63d0\u793a\u7f3a\u5c11\u67d0\u4e2adll\uff0c\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u6ca1\u6709\u5b89\u88c5\u201cVisual C++ Redistributable for Visual Studio 2015\u201d\uff0c\u53ef\u4ee5 \u70b9\u51fb\u6b64\u5904 \u4e0b\u8f7d\u5b89\u88c5\u3002",
            "title": "\u5b89\u88c5"
        },
        {
            "location": "/terminal/#_2",
            "text": "PowerGate\u7f51\u5173\u7a0b\u5e8f\u7684\u767b\u5f55\u754c\u9762\u5982\u4e0b\u6240\u793a\u3002       \u5982\u679c\u7528\u6237\u9009\u4e2d\u201c\u8bb0\u4f4f\u201d\u9009\u9879\uff0c\u7f51\u5173\u7a0b\u5e8f\u4f1a\u8bb0\u4f4f\u7528\u6237\u6b64\u6b21\u7684\u767b\u5f55\u540d\u3002",
            "title": "\u767b\u5f55\u754c\u9762"
        },
        {
            "location": "/terminal/#_3",
            "text": "\u70b9\u51fb\u767b\u5f55\u754c\u9762\u7684\u201c\u7f16\u8f91\u201d\u6309\u94ae\uff0c\u7528\u6237\u53ef\u4ee5\u7f16\u8f91\u3001\u5220\u9664\u3001\u521b\u5efa\u7ecf\u7eaa\u5546\u914d\u7f6e\u3002        \u5982\u679c\u7528\u6237\u9700\u8981\u521b\u5efa\u65b0\u7684\u7ecf\u7eaa\u5546\u914d\u7f6e\uff0c\u53ef\u4ee5\u70b9\u51fb\u7a97\u53e3\u5de6\u4e0b\u89d2\u7684\u201c\u65b0\u5efa\u201d\u6309\u94ae\u3002\u586b\u5199\u5b8c\u6210\u6240\u6709\u7684\u914d\u7f6e\u4fe1\u606f\u4e4b\u540e\uff0c\u70b9\u51fb\u201c\u786e\u8ba4\u201d\u5373\u53ef\u3002",
            "title": "\u7f16\u8f91\u7ecf\u7eaa\u5546"
        },
        {
            "location": "/terminal/#_4",
            "text": "\u70b9\u51fb\u767b\u5f55\u754c\u9762\u7684\u201c\u8bbe\u7f6e\u201d\u6309\u94ae\uff0c\u7528\u6237\u53ef\u4ee5\u8bbe\u7f6ePowerGate\u7f51\u5173\u7a0b\u5e8f\u3002       \u8bbe\u7f6e\u9009\u9879\u5305\u62ec\uff1a   \u670d\u52a1\u7aef\u53e3\uff1aPowerGate\u7f51\u5173\u7684\u76d1\u542c\u5546\u54c1\uff0c\u9ed8\u8ba4\u4e3a5501\u3002  \u5e95\u5c42\u901a\u9053\uff1a\u884c\u60c5\u6570\u636e\u53ca\u8ba2\u5355\u6267\u884c\u670d\u52a1\u6240\u5728\u7684\u901a\u9053\u3002  \u5185\u7f6e\u7b97\u6cd5\uff1a\u662f\u5426\u5f00\u542f\u5185\u7f6e\u7b97\u6cd5\u4ea4\u6613\u529f\u80fd\u3002  \u591a\u8d26\u6237\uff1a\u662f\u5426\u5f00\u542f\u591a\u8d26\u6237\u652f\u6301\u529f\u80fd\u3002  \u672c\u5730\u52a0\u8f7d\uff1a\u662f\u5426\u5f00\u542f\u4ee5\u52a8\u6001\u94fe\u63a5\u5e93\u5f62\u5f0f\u52a0\u8f7d\u7b56\u7565\u529f\u80fd\u3002     \u90e8\u5206\u9009\u9879\u5728\u4e00\u4e9b\u7248\u672c\u4e2d\u53ef\u80fd\u672a\u542f\u7528\u3002",
            "title": "\u8bbe\u7f6e\u9009\u9879"
        },
        {
            "location": "/terminal/#_5",
            "text": "PowerGate\u7f51\u5173\u7a0b\u5e8f\u8fd0\u884c\u7528\u6237\u7684\u7b97\u6cd5\u4ea4\u6613\u7b56\u7565\u3002\u5728\u767b\u5f55\u8d26\u6237\u4e4b\u540e\uff0c\u7f51\u5173\u7a0b\u5e8f\u7684\u4e3b\u754c\u9762\u5982\u4e0b\u56fe\u6240\u793a\u3002        \u7f51\u5173\u7a0b\u5e8f\u4e3b\u754c\u9762\u4e0a\u67096\u4e2a\u9762\u677f\uff0c\u5305\u62ec\uff1a     \u8d26\u6237\u4fe1\u606f\u9762\u677f \n  \u663e\u793a\u7528\u6237\u7684\u8d26\u6237\u4fe1\u606f\u3002    \u884c\u60c5\u6570\u636e\u9762\u677f \n  \u663e\u793a\u7528\u6237\u6216\u7b56\u7565\u8ba2\u9605\u7684\u884c\u60c5\u6570\u636e\u3002    \u7b56\u7565\u76d1\u63a7\u9762\u677f \n  \u5728\u8fd9\u4e2a\u9762\u677f\u4e2d\uff0c\u7528\u6237\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u52a0\u8f7d\u7684\u7b56\u7565\u3002\u901a\u8fc7\u8be5\u9762\u677f\u7684\u76f8\u5e94\u680f\u4f4d\uff0c\u7528\u6237\u53ef\u4ee5\u542f\u52a8\u3001\u505c\u6b62\u7b56\u7565\uff0c\u67e5\u770b\u5f53\u524d\u7b56\u7565\u7684\u6301\u4ed3\u3001\u65e5\u5fd7\uff0c\u4e3a\u7b56\u7565\u5206\u914d\u4ed3\u4f4d\uff0c\u5411\u7b56\u7565\u53d1\u9001\u547d\u4ee4\u7b49\u3002    \u62a5\u5355\u4fe1\u606f\u9762\u677f \n  \u663e\u793a\u5f53\u524d\u8d26\u6237\u7684\u6240\u6709\u62a5\u5355\u4fe1\u606f\u3002    \u65e5\u5fd7\u9762\u677f \n  \u663e\u793a\u7f51\u5173\u7a0b\u5e8f\u7684\u65e5\u5fd7\u3002    \u6301\u4ed3\u9762\u677f \n  \u663e\u793a\u5f53\u524d\u8d26\u6237\u7684\u6240\u6709\u6301\u4ed3\u4fe1\u606f\u3002     \u8fd9\u51e0\u4e2a\u9762\u677f\u53ef\u4ee5\u901a\u8fc7\u62d6\u62c9\u9762\u677f\u8fb9\u754c\u663e\u793a\u548c\u9690\u85cf\u3002",
            "title": "\u4e3b\u754c\u9762"
        },
        {
            "location": "/terminal/#_6",
            "text": "\u5728\u884c\u60c5\u9762\u677f\u4e0a\u53cc\u51fb\u5408\u7ea6\uff0c\u6216\u8005\u70b9\u51fb\u201c\u6301\u4ed3\u5217\u8868\u201d\u4e0b\u65b9\u7684\u201c\u4ea4\u6613\u9762\u677f\u201d\u6309\u94ae\uff0c\u4f1a\u5f39\u51fa\u201c\u4ea4\u6613\u9762\u677f\u201d\u3002\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u201c\u4ea4\u6613\u9762\u677f\u201d\u624b\u52a8\u4ea4\u6613\u3002",
            "title": "\u4ea4\u6613\u9762\u677f"
        },
        {
            "location": "/terminal/#_7",
            "text": "\u5728\u884c\u60c5\u9762\u677f\u4e2d\u70b9\u51fb\u53f3\u952e\uff0c\u5728\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u8ba2\u9605\u5408\u7ea6\u201d\uff0c\u4f1a\u5f39\u51fa\u5408\u7ea6\u8ba2\u9605\u7a97\u53e3\uff0c\u7528\u6237\u8f93\u5165\u5408\u7ea6\u540d\u4e4b\u540e\u70b9\u51fb\u786e\u8ba4\uff0cPowerGate\u4f1a\u5c1d\u8bd5\u8ba2\u9605\u6307\u5b9a\u5408\u7ea6\u3002 \n\u5408\u7ea6\u8ba2\u9605\u6210\u529f\u4e0e\u5426\uff0c\u53d6\u51b3\u4e8e\u5e95\u5c42\u7684\u884c\u60c5\u670d\u52a1\u662f\u5426\u652f\u6301\u8be5\u5408\u7ea6\u3002\u4f8b\u5982\uff0c\u671f\u8d27CTP\u7684\u884c\u60c5\u670d\u52a1\u5c31\u65e0\u6cd5\u8ba2\u9605\u80a1\u7968\u884c\u60c5\u3002",
            "title": "\u884c\u60c5\u8ba2\u9605"
        },
        {
            "location": "/terminal/#_8",
            "text": "\u5728\u884c\u60c5\u9762\u677f\u4e2d\u70b9\u51fb\u53f3\u952e\uff0c\u5728\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u6df1\u5ea6\u884c\u60c5\u201d\uff0c\u4f1a\u5f39\u51fa\u6df1\u5ea6\u884c\u60c5\u7a97\u53e3\u3002\u53ea\u6709\u5e95\u5c42\u7684\u884c\u60c5\u670d\u52a1\u63d0\u4f9b\u6df1\u5ea6\u884c\u60c5\uff0c\u7a97\u53e3\u4e2d\u624d\u4f1a\u663e\u793a\u6df1\u5ea6\u884c\u60c5\u6570\u636e\u3002 \n\u4e0b\u56fe\u662fPowerGate\u63a5\u5165\u5174\u4e1a\u8bc1\u5238UT level2\u884c\u60c5\u65f6\uff0c\u6df1\u5ea6\u884c\u60c5\u7a97\u53e3\u663e\u793a\u7684\u6570\u636e\u3002",
            "title": "\u6df1\u5ea6\u884c\u60c5"
        },
        {
            "location": "/examples/",
            "text": "\u5728\n\u8fd9\u91cc\n\u53ef\u4ee5\u627e\u5230\u66f4\u591a\u793a\u4f8b\u4ee3\u7801\u3002\n\n\nTick\n\n\nBar\n\n\n# -*- coding: utf-8 -*-\nfrom PowerGate import StrategyBase\nfrom PowerGate import StrategyConfig\nfrom PowerGate import Resolution\n\nclass BarDemo(StrategyBase):\n    def __init__(self, *args, **kwargs):\n        super(BarDemo, self).__init__(*args, **kwargs)\n\n    def onBar(self, bar):\n        print('Instrument:%s, DateTime:%s, Resolution:%d, Interval:%d' % \\\n        (bar.getInstrument(), bar.getDateTime(), bar.getResolution(), bar.getInterval()))\n\nif __name__ == '__main__':\n    config = StrategyConfig()\n    config.setName('BarDemo')\n    config.subscribe('rb1710', Resolution.MINUTE, 1)\n    config.subscribe('ag1712', Resolution.MINUTE, 2)\n    config.subscribe('IF1706', Resolution.SECOND, 5)\n\n    strategy = BarDemo()\n    strategy.run(config)\n\n    raw_input()\n\n    strategy.stop()\n\n\n\n\u5728\u8be5\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5728\u7b56\u7565\u7684\u914d\u7f6e\u4e2d\u8ba2\u9605\u4e86rb1710\u3001ag1712\u3001IF1706\u4e09\u4e2a\u5408\u7ea6\uff0c\u5468\u671f\u5206\u522b\u4e3a1\u5206\u949f\u30012\u5206\u949f\u548c5\u79d2\u949f\u3002\n\n\u7b56\u7565\u8fd0\u884c\u4e4b\u540e\uff0c\u6211\u4eec\u5728\u7ec8\u7aef\u7a97\u53e3\u4e2d\u5c06\u4f1a\u770b\u5230\u8fd9\u4e09\u4e2a\u5408\u7ea6\u7684\u6253\u5370\u4fe1\u606f\uff0c\u65f6\u95f4\u95f4\u9694\u5206\u522b\u4e3a1\u5206\u949f\u30012\u5206\u949f\u548c5\u79d2\u949f\u3002\n\n\n\u6307\u6807\n\n\n\u5b9a\u65f6\u5668\n\n\n# -*- coding: utf-8 -*-\nfrom PowerGate import StrategyBase\nfrom PowerGate import StrategyConfig\n\nclass TimerDemo(StrategyBase):\n    def __init__(self, *args, **kwargs):\n        super(TimerDemo, self).__init__(*args, **kwargs)\n\n    def onStart(self):\n        self.registerTimer(1000)\n\n    def onTimer(self, timerId):\n        print(timerId)\n        self.registerTimer(1000)\n\nif __name__ == '__main__':\n    config = StrategyConfig()\n    config.setName('TimerDemo')\n\n    strategy = TimerDemo()\n    strategy.run(config)\n\n    raw_input()\n\n    strategy.stop()\n\n\n\n\u6211\u4eec\u4f7f\u7528registerTimer()\u63a5\u53e3\u6ce8\u518c\u4e86\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\u4e3a1000ms\u7684\u5b9a\u65f6\u5668\u3002\u8fd9\u4e2a\u5b9a\u65f6\u5668\u662f\u4e00\u6b21\u6027\u7684\uff0c\u4e0d\u4f1a\u5468\u671f\u6027\u7684\u89e6\u53d1\uff0c\u6240\u4ee5\u5728\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u91cd\u65b0\u6ce8\u518c\u5b9a\u65f6\u5668\u3002\n\n\u8be5\u793a\u4f8b\u6bcf\u9694\u4e00\u79d2\u6253\u5370\u4e00\u6b21\u5f53\u524d\u5b9a\u65f6\u5668\u7684ID\u3002\n\n\n\u53d1\u9001\u547d\u4ee4\n\n\n\u56de\u8c03\u51fd\u6570\n\n\n# -*- coding: utf-8 -*-\nimport logging\nimport Tkinter\nfrom Tkinter import Frame\nfrom Tkinter import Label\nfrom Tkinter import Button\nfrom Tkinter import Entry\nfrom PowerGate import StrategyBase\nfrom PowerGate import StrategyConfig\n\nclass Callback(StrategyBase):\n    def __init__(self, logger):\n        StrategyBase.__init__(self)\n        self.logger = logger\n\n    def onCreate(self):\n        self.logger.info('onCreate')\n\n    def onSetParameter(self, name, type, value, isLast):\n        self.logger.info('onSetParameter: %s, %d, %s' % (name, type, value))\n\n    def onStart(self):\n        self.logger.info('onStart')\n\n    def onPause(self):\n        self.logger.info('onPause')\n\n    def onResume(self):\n        self.logger.info('onResume')\n\n    def onTick(self, tick):\n        pass\n        #self.logger.info('onTick: %s @ %d %d.%d, price:%d' % \n            (tick.instrument, tick.date, tick.time, tick.millis, tick.lastPrice))\n\n    def onBar(self, bar):\n        self.logger.info('onBar')\n\n    def onOrderSubmitted(self, order):\n        self.logger.info('onOrderSubmitted: %s', order.clOrdId)\n\n    def onOrderRejected(self, order):\n        self.logger.info('onOrderRejected: %s', order.clOrdId)\n\n    def onOrderCancelled(self, order):\n        self.logger.info('onOrderCancelled: %s', order.clOrdId)\n\n    def onOrderFilled(self, order):\n        self.logger.info('onOrderFilled: %s', order.clOrdId)\n\n    def onCommand(self, command):\n        self.logger.info('onCommand: %s' % command)\n        words = command.split()\n        if len(words) == 2:\n            action = words[0]\n            inst = words[1]\n\n            if action == 'sub':\n                self.subscribe(inst)\n\n            return\n\n        if len(words) == 3:\n            action = words[0]\n            inst = words[1]\n            try:\n                qty = float(words[2])\n            except ValueError:\n                return\n\n            if action == 'buy':\n                self.buy(inst, qty, self.getAskPrice(inst))\n            elif action == 'sell':\n                self.sell(inst, qty, self.getBidPrice(inst))\n            elif action == 'short':\n                self.sellShort(inst, qty, self.getBidPrice(inst))\n            elif action == 'cover':\n                self.buyToCover(inst, qty, self.getAskPrice(inst))\n\n\n    def onStop(self):\n        self.logger.info('onStop')\n\nclass GUI(object):\n    class TextHandler(logging.Handler):\n        def __init__(self, text):\n            logging.Handler.__init__(self)\n            self.text = text\n\n        def emit(self, record):\n            msg = self.format(record)\n            def append():\n                self.text.configure(state='normal')\n                self.text.insert(Tkinter.END, msg + '\\n')\n                self.text.configure(state='disabled')\n                self.text.yview(Tkinter.END)\n            self.text.after(0, append)\n\n    def __init__(self):\n        root = self.root = Tkinter.Tk()\n        root.title('Callback')\n        root.protocol(\"WM_DELETE_WINDOW\", self.on_closing)\n        root.bind('<Return>', self.send_command)\n\n        self.build_gui()\n        self.run_strategy()\n\n    def build_gui(self):\n        import ScrolledText\n\n        st = ScrolledText.ScrolledText(self.root, state='disabled')\n        st.configure(font='TkFixedFont')\n        st.grid(row=0, column=0, padx=2, pady=5)\n\n        frame = Frame(self.root, height=20)\n        frame.grid(row=1)\n\n        Label(frame, text=\"Command:\").grid()\n        self.entry = Entry(frame, width=70)\n        self.entry.grid(row=0, column=1)\n        self.entry.focus_set()\n\n        btn = Button(frame, text='Send')\n        btn.grid(row=0, column=2)\n        btn.bind('<Button-1>', self.send_command)\n\n        text_handler = self.TextHandler(st)\n\n        logger = self.logger = logging.getLogger()\n        logger.setLevel(logging.DEBUG)\n        logger.addHandler(text_handler)\n\n    def send_command(self, event):\n        text = self.entry.get()\n        if text == 'pause':\n            self.strategy.pause()\n        elif text == 'resume':\n            self.strategy.resume()\n        else:\n            self.strategy.sendCommand(text)\n\n        self.entry.delete(0, Tkinter.END)\n\n    def run_strategy(self):\n        config = StrategyConfig()\n        config.setName('Callback')\n        config.setUserParameter('Bool', False);\n        config.setUserParameter('Int', 10);\n        config.setUserParameter('Double', 3.14);\n        config.setUserParameter('String', 'param');\n        config.subscribe('rb1710')\n\n        self.strategy = Callback(self.logger)\n        self.strategy.run(config)\n\n    def on_closing(self):\n        self.strategy.stop()\n\n        self.root.destroy()\n\nif __name__ == '__main__':\n    gui = GUI()\n    gui.root.mainloop()\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u89c2\u5bdf\u56de\u8c03\u4e8b\u4ef6\uff0c\u6211\u4eec\u4f7f\u7528Python\u81ea\u5e26\u7684Tkinter\u56fe\u5f62\u5e93\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7a97\u53e3\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u7a97\u53e3\u5e95\u90e8\u7684\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\uff1a\u8ba2\u9605\u3001\u4e70\u5f00\u3001\u5356\u5f00\u3001\u4e70\u5e73\u3001\u5356\u5e73\u51715\u4e2a\u547d\u4ee4\uff0c\u8fd9\u4e9b\u547d\u4ee4\u901a\u8fc7onCommand()\u63a5\u53e3\u4f20\u9012\u7ed9\u4ea4\u6613\u7b56\u7565\uff0c\u4ea4\u6613\u7b56\u7565\u89e3\u6790\u5e76\u6267\u884c\u547d\u4ee4\u3002\n\n\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9876\u90e8\u7684\u7a97\u53e3\u89c2\u5bdf\u56de\u8c03\u51fd\u6570\u7684\u8f93\u51fa\u3002  \n\n\n  \n\n\n\u4f7f\u7528\u514d\u8d39\u5386\u53f2\u6570\u636e\n\n\nTA-Lib",
            "title": "\u66f4\u591a\u4f8b\u5b50"
        },
        {
            "location": "/examples/#tick",
            "text": "",
            "title": "Tick"
        },
        {
            "location": "/examples/#bar",
            "text": "# -*- coding: utf-8 -*-\nfrom PowerGate import StrategyBase\nfrom PowerGate import StrategyConfig\nfrom PowerGate import Resolution\n\nclass BarDemo(StrategyBase):\n    def __init__(self, *args, **kwargs):\n        super(BarDemo, self).__init__(*args, **kwargs)\n\n    def onBar(self, bar):\n        print('Instrument:%s, DateTime:%s, Resolution:%d, Interval:%d' % \\\n        (bar.getInstrument(), bar.getDateTime(), bar.getResolution(), bar.getInterval()))\n\nif __name__ == '__main__':\n    config = StrategyConfig()\n    config.setName('BarDemo')\n    config.subscribe('rb1710', Resolution.MINUTE, 1)\n    config.subscribe('ag1712', Resolution.MINUTE, 2)\n    config.subscribe('IF1706', Resolution.SECOND, 5)\n\n    strategy = BarDemo()\n    strategy.run(config)\n\n    raw_input()\n\n    strategy.stop()  \u5728\u8be5\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5728\u7b56\u7565\u7684\u914d\u7f6e\u4e2d\u8ba2\u9605\u4e86rb1710\u3001ag1712\u3001IF1706\u4e09\u4e2a\u5408\u7ea6\uff0c\u5468\u671f\u5206\u522b\u4e3a1\u5206\u949f\u30012\u5206\u949f\u548c5\u79d2\u949f\u3002 \n\u7b56\u7565\u8fd0\u884c\u4e4b\u540e\uff0c\u6211\u4eec\u5728\u7ec8\u7aef\u7a97\u53e3\u4e2d\u5c06\u4f1a\u770b\u5230\u8fd9\u4e09\u4e2a\u5408\u7ea6\u7684\u6253\u5370\u4fe1\u606f\uff0c\u65f6\u95f4\u95f4\u9694\u5206\u522b\u4e3a1\u5206\u949f\u30012\u5206\u949f\u548c5\u79d2\u949f\u3002",
            "title": "Bar"
        },
        {
            "location": "/examples/#_1",
            "text": "",
            "title": "\u6307\u6807"
        },
        {
            "location": "/examples/#_2",
            "text": "# -*- coding: utf-8 -*-\nfrom PowerGate import StrategyBase\nfrom PowerGate import StrategyConfig\n\nclass TimerDemo(StrategyBase):\n    def __init__(self, *args, **kwargs):\n        super(TimerDemo, self).__init__(*args, **kwargs)\n\n    def onStart(self):\n        self.registerTimer(1000)\n\n    def onTimer(self, timerId):\n        print(timerId)\n        self.registerTimer(1000)\n\nif __name__ == '__main__':\n    config = StrategyConfig()\n    config.setName('TimerDemo')\n\n    strategy = TimerDemo()\n    strategy.run(config)\n\n    raw_input()\n\n    strategy.stop()  \u6211\u4eec\u4f7f\u7528registerTimer()\u63a5\u53e3\u6ce8\u518c\u4e86\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\u4e3a1000ms\u7684\u5b9a\u65f6\u5668\u3002\u8fd9\u4e2a\u5b9a\u65f6\u5668\u662f\u4e00\u6b21\u6027\u7684\uff0c\u4e0d\u4f1a\u5468\u671f\u6027\u7684\u89e6\u53d1\uff0c\u6240\u4ee5\u5728\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u91cd\u65b0\u6ce8\u518c\u5b9a\u65f6\u5668\u3002 \n\u8be5\u793a\u4f8b\u6bcf\u9694\u4e00\u79d2\u6253\u5370\u4e00\u6b21\u5f53\u524d\u5b9a\u65f6\u5668\u7684ID\u3002",
            "title": "\u5b9a\u65f6\u5668"
        },
        {
            "location": "/examples/#_3",
            "text": "",
            "title": "\u53d1\u9001\u547d\u4ee4"
        },
        {
            "location": "/examples/#_4",
            "text": "# -*- coding: utf-8 -*-\nimport logging\nimport Tkinter\nfrom Tkinter import Frame\nfrom Tkinter import Label\nfrom Tkinter import Button\nfrom Tkinter import Entry\nfrom PowerGate import StrategyBase\nfrom PowerGate import StrategyConfig\n\nclass Callback(StrategyBase):\n    def __init__(self, logger):\n        StrategyBase.__init__(self)\n        self.logger = logger\n\n    def onCreate(self):\n        self.logger.info('onCreate')\n\n    def onSetParameter(self, name, type, value, isLast):\n        self.logger.info('onSetParameter: %s, %d, %s' % (name, type, value))\n\n    def onStart(self):\n        self.logger.info('onStart')\n\n    def onPause(self):\n        self.logger.info('onPause')\n\n    def onResume(self):\n        self.logger.info('onResume')\n\n    def onTick(self, tick):\n        pass\n        #self.logger.info('onTick: %s @ %d %d.%d, price:%d' % \n            (tick.instrument, tick.date, tick.time, tick.millis, tick.lastPrice))\n\n    def onBar(self, bar):\n        self.logger.info('onBar')\n\n    def onOrderSubmitted(self, order):\n        self.logger.info('onOrderSubmitted: %s', order.clOrdId)\n\n    def onOrderRejected(self, order):\n        self.logger.info('onOrderRejected: %s', order.clOrdId)\n\n    def onOrderCancelled(self, order):\n        self.logger.info('onOrderCancelled: %s', order.clOrdId)\n\n    def onOrderFilled(self, order):\n        self.logger.info('onOrderFilled: %s', order.clOrdId)\n\n    def onCommand(self, command):\n        self.logger.info('onCommand: %s' % command)\n        words = command.split()\n        if len(words) == 2:\n            action = words[0]\n            inst = words[1]\n\n            if action == 'sub':\n                self.subscribe(inst)\n\n            return\n\n        if len(words) == 3:\n            action = words[0]\n            inst = words[1]\n            try:\n                qty = float(words[2])\n            except ValueError:\n                return\n\n            if action == 'buy':\n                self.buy(inst, qty, self.getAskPrice(inst))\n            elif action == 'sell':\n                self.sell(inst, qty, self.getBidPrice(inst))\n            elif action == 'short':\n                self.sellShort(inst, qty, self.getBidPrice(inst))\n            elif action == 'cover':\n                self.buyToCover(inst, qty, self.getAskPrice(inst))\n\n\n    def onStop(self):\n        self.logger.info('onStop')\n\nclass GUI(object):\n    class TextHandler(logging.Handler):\n        def __init__(self, text):\n            logging.Handler.__init__(self)\n            self.text = text\n\n        def emit(self, record):\n            msg = self.format(record)\n            def append():\n                self.text.configure(state='normal')\n                self.text.insert(Tkinter.END, msg + '\\n')\n                self.text.configure(state='disabled')\n                self.text.yview(Tkinter.END)\n            self.text.after(0, append)\n\n    def __init__(self):\n        root = self.root = Tkinter.Tk()\n        root.title('Callback')\n        root.protocol(\"WM_DELETE_WINDOW\", self.on_closing)\n        root.bind('<Return>', self.send_command)\n\n        self.build_gui()\n        self.run_strategy()\n\n    def build_gui(self):\n        import ScrolledText\n\n        st = ScrolledText.ScrolledText(self.root, state='disabled')\n        st.configure(font='TkFixedFont')\n        st.grid(row=0, column=0, padx=2, pady=5)\n\n        frame = Frame(self.root, height=20)\n        frame.grid(row=1)\n\n        Label(frame, text=\"Command:\").grid()\n        self.entry = Entry(frame, width=70)\n        self.entry.grid(row=0, column=1)\n        self.entry.focus_set()\n\n        btn = Button(frame, text='Send')\n        btn.grid(row=0, column=2)\n        btn.bind('<Button-1>', self.send_command)\n\n        text_handler = self.TextHandler(st)\n\n        logger = self.logger = logging.getLogger()\n        logger.setLevel(logging.DEBUG)\n        logger.addHandler(text_handler)\n\n    def send_command(self, event):\n        text = self.entry.get()\n        if text == 'pause':\n            self.strategy.pause()\n        elif text == 'resume':\n            self.strategy.resume()\n        else:\n            self.strategy.sendCommand(text)\n\n        self.entry.delete(0, Tkinter.END)\n\n    def run_strategy(self):\n        config = StrategyConfig()\n        config.setName('Callback')\n        config.setUserParameter('Bool', False);\n        config.setUserParameter('Int', 10);\n        config.setUserParameter('Double', 3.14);\n        config.setUserParameter('String', 'param');\n        config.subscribe('rb1710')\n\n        self.strategy = Callback(self.logger)\n        self.strategy.run(config)\n\n    def on_closing(self):\n        self.strategy.stop()\n\n        self.root.destroy()\n\nif __name__ == '__main__':\n    gui = GUI()\n    gui.root.mainloop()  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u89c2\u5bdf\u56de\u8c03\u4e8b\u4ef6\uff0c\u6211\u4eec\u4f7f\u7528Python\u81ea\u5e26\u7684Tkinter\u56fe\u5f62\u5e93\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7a97\u53e3\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u7a97\u53e3\u5e95\u90e8\u7684\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\uff1a\u8ba2\u9605\u3001\u4e70\u5f00\u3001\u5356\u5f00\u3001\u4e70\u5e73\u3001\u5356\u5e73\u51715\u4e2a\u547d\u4ee4\uff0c\u8fd9\u4e9b\u547d\u4ee4\u901a\u8fc7onCommand()\u63a5\u53e3\u4f20\u9012\u7ed9\u4ea4\u6613\u7b56\u7565\uff0c\u4ea4\u6613\u7b56\u7565\u89e3\u6790\u5e76\u6267\u884c\u547d\u4ee4\u3002 \n\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9876\u90e8\u7684\u7a97\u53e3\u89c2\u5bdf\u56de\u8c03\u51fd\u6570\u7684\u8f93\u51fa\u3002",
            "title": "\u56de\u8c03\u51fd\u6570"
        },
        {
            "location": "/examples/#_5",
            "text": "",
            "title": "\u4f7f\u7528\u514d\u8d39\u5386\u53f2\u6570\u636e"
        },
        {
            "location": "/examples/#ta-lib",
            "text": "",
            "title": "TA-Lib"
        },
        {
            "location": "/sdk/",
            "text": "\u7b56\u7565SDK\u4e0b\u8f7d\u5730\u5740\uff1a  \n\n\n\n\nC++ SDK\n\n\nPython SDK\n\n\nJava SDK\n\n\nC# SDK\n\n\nR SDK\n\n\nMatlab SDK\n\n\n\n\n\u6570\u636e\u7ed3\u6784\n\n\n\u2003Resolution\n\n\n\u884c\u60c5\u5468\u671f\n\n\nTICK   = 0,                 \nSECOND = 1,                \nMINUTE = 60,                \nHOUR   = 60 * 60,          \nDAY    = 24 * 60 * 60,     \nWEEK   = 24 * 60 * 60 * 7\n\n\n\n\u2003ExchangeCode\n\n\n\u4ea4\u6613\u6240\u4ee3\u7801  \n\n\nEXCHG_UNKNOWN = 0x00,\nEXCHG_SSE     = 0x0001,\nEXCHG_SZE     = 0x0002,\nEXCHG_SHFE    = 0x0004,\nEXCHG_DCE     = 0x0008,\nEXCHG_CZCE    = 0x0010,\nEXCHG_CFFEX   = 0x0020,\nEXCHG_GOLD    = 0x0040\n\n\n\n\u2003SecurityType\n\n\n\u8bc1\u5238\u7c7b\u578b\n\n\nUNKNOWN = 0,\nSTOCK,\nFUTURE,\nFOREX,\nOPTION\n\n\n\n\u2003MarketData\n\n\n\u884c\u60c5\u6570\u636e\n\n\nchar      type;\nchar      securityType;\nchar      instrument[LEN_INSTRUMENT];\nchar      exchange[LEN_EXCHANGE];\nint       date;     // YYYYMMDD\nint       time;     // hhmmss\nint       millis;\nint       resolution;\nint       interval;\ndouble    lastPrice;\ndouble    openPrice;\ndouble    highestPrice;\ndouble    lowestPrice;\ndouble    closePrice;\ndouble    volume;\nlong long openInterest;\ndouble    turnover;\ndouble    upperLimitPrice;\ndouble    lowerLimitPrice;\ndouble    preSettlePrice;\ndouble    preClosePrice;\ndouble    settlePrice;\nint       preOpenInterest;\ndouble    averagePrice;\nint       depth;\n\ndouble    bidPrice1;\nint       bidVolume1;\ndouble    bidPrice2;\nint       bidVolume2;\ndouble    bidPrice3;\nint       bidVolume3;\ndouble    bidPrice4;\nint       bidVolume4;\ndouble    bidPrice5;\nint       bidVolume5;\n\ndouble    askPrice1;\nint       askVolume1;\ndouble    askPrice2;\nint       askVolume2;\ndouble    askPrice3;\nint       askVolume3;\ndouble    askPrice4;\nint       askVolume4;\ndouble    askPrice5;\nint       askVolume5;\n\n\n\n\u2003TimeInforce\n\n\n\u8ba2\u5355\u65f6\u6548  \n\n\nDAY = 0,\nGTC,\nOPG,\nIOC,\nFOK,\nGTX,\nGTD,\n\n\n\n\u2003Order\n\n\n\u8ba2\u5355\n\n\n// Buy side's original client order ID, uniqueness must be guaranteed within a single trading day.\nchar          clOrdId[LEN_ID];\n// Sell side's reference for this order.\nchar          ordId[LEN_ID];\nchar          instrument[LEN_INSTRUMENT];\nint           exchange;\nint           type;\nint           action;\nint           timeInforce;\nbool          allOrNone;\nint           status;\ndouble        quantity;\ndouble        price;\ndouble        stopPx;\ndouble        tradedQty;\ndouble        avgTradedPx;\ndouble        lastTradedQty;\ndouble        lastTradedPx;\nlong          date;\nlong          time;\ndouble        commissions;\nchar          stateMsg[LEN_STATE_MSG];\nbool          closeAction;          // Distinguish three closing actions.\nint           compId;               // Component who submit this order.\nint           ownerId;              // Strategy who submit this order.\nint           srvId;\n\n\n\n\u2003Execution\n\n\n\u6210\u4ea4\u4fe1\u606f\n\n\nchar          instrument[LEN_INSTRUMENT];\nint           type;\nint           action;\nint           date;       // YYYYMMDD\nint           time;       // hhmmss\nint           millis;\ndouble        quantity;\ndouble        price;\nbool          closeAction;\n\nchar          clOrdId[LEN_ID];\nchar          ordId[LEN_ID];\nchar          execId[LEN_ID];\nint           srvId;\n\n\n\n\u2003OrderAction\n\n\n\u62a5\u5355\u65b9\u5411\n\n\nBUY          = 1,\nBUY_TO_COVER = 2,\nSELL         = 3,\nSELL_SHORT   = 4,\n\n\n\n\u2003OrderState\n\n\n\u8ba2\u5355\u72b6\u6001\n\n\nUNKNOWN = 0,\nINITIAL,           // Initial state.\nPENDING_NEW,\nSUBMITTED,         // Order has been submitted.\nACCEPTED,          // Order has been acknowledged by the broker.\nPENDING_CANCEL,\nCANCELED,          // Order has been canceled.\nPARTIALLY_FILLED,  // Order has been partially filled.\nFILLED,            // Order has been completely filled.\nREJECTED           // Order has been rejected.\n\n\n\n\u2003OrderType\n\n\n\u8ba2\u5355\u7c7b\u578b\n\n\nMARKET     = 1,\nLIMIT      = 2,\nSTOP       = 3,\nSTOP_LIMIT = 4,\n\n\n\n\u2003AccountDetails\n\n\n\u8d26\u6237\u4fe1\u606f\n\n\nchar   userCode[32];\nchar   password[32];\nchar   userName[64];\nchar   currency[8];\ndouble preBalance;\ndouble preDeposit;\ndouble margin;\ndouble lastFund;\ndouble currMargin;\ndouble deposit;\ndouble withdraw;\ndouble equity;\ndouble availFunds;\ndouble buyFreeze;\ndouble sellFreeze;\ndouble buyBond;\ndouble sellBond;\ndouble realizedPnL;\ndouble unrealizedPnL;\ndouble totalBond;\ndouble totalExBond;\ndouble todayReleaseFund;\ndouble comFreeze;\ndouble commission;\ndouble otherFreeze;\ndouble totalFreeze;\ndouble riskLevel;\n\n\n\n\u2003SecurityDefinition\n\n\n\u5408\u7ea6\u5b9a\u4e49\n\n\nchar   instrument[LEN_INSTRUMENT];\nchar   name[32];\nint    exchgCode;\ndouble upPrice;\ndouble lowPrice;\ndouble moneyRate;\ndouble longMarginRatio;\ndouble shortMarginRatio;\ndouble multiplier;\nchar   mktdate1[20];\nchar   mktdate2[20];\ndouble tickSize;\ndouble upDealNum;\ndouble lowDealNum;\nint    isTrading;\n\n\n\n\u2003PositionDate\n\n\n\u4ed3\u4f4d\u65e5\u671f\n\n\nPOSITION_DATE_TODAY,\nPOSITION_DATE_HISTORY,\nPOSITION_DATE_ALL,\n\n\n\n\u2003PositionSide\n\n\n\u4ed3\u4f4d\u65b9\u5411\n\n\nPOSITION_SIDE_LONG  = 'L',\nPOSITION_SIDE_SHORT = 'S'\n\n\n\n\u2003AccountPosition\n\n\n\u8d26\u6237\u6301\u4ed3\n\n\nchar   instrument[LEN_INSTRUMENT];\nchar   side;\nchar   buysell;\nchar   dateMark;\ndouble cumQty;\ndouble todayQty;\ndouble histQty;\ndouble frozen;\ndouble preSettlmntPx;\ndouble cost;\ndouble avgPx;\ndouble unrealizedPnL;\ndouble realizedPnL;\ndouble margin;\nint    date;\nint    time;\nint    millis;\ndouble histHighestPx;\ndouble histLowestPx;\nchar   accountId[LEN_ID];\n\n\n\n\u2003StrategyPosition\n\n\n\u7b56\u7565\u6301\u4ed3\n\n\nint    strategyId;\nchar   instrument[LEN_INSTRUMENT];\nint    side;\ndouble quantity;\ndouble frozen;\ndouble unformed;\ndouble avgPx;\ndouble margin;\ndouble unrealizedPnL;\ndouble realizedPnL;\nint    date;\nint    time;\nint    millis;\ndouble highestPx;\ndouble lowestPx;\n\n\n\n\u2003StrategyParamType\n\n\n\u7b56\u7565\u53c2\u6570\u7c7b\u578b\n\n\nPARAM_TYPE_BOOL,\nPARAM_TYPE_INT,\nPARAM_TYPE_FLOAT,\nPARAM_TYPE_STRING,\n\n\n\nStrategyBase\n\n\n\u2003\u884c\u60c5API\n\n\nconst char* getMainInstrument() const;\nBarSeries*  getTickSeries(const char* instrument = \"\");\nBarSeries*  getBarSeries(const char* instrument = \"\", int resolution = Resolution::MINUTE, int interval = 1);\n// \u8ba2\u9605\u884c\u60c5\nbool   subscribe(const char* instrument, int resolution = Resolution::TICK, int interval = 1, int srvId = 0);\n// \u53d6\u6d88\u8ba2\u9605\nbool   unsubscribe(const char* instrument, int resolution = Resolution::TICK, int interval = 1, int srvId = 0);\n// \u83b7\u53d6\u5408\u7ea6\u4e58\u6570\ndouble getMultiplier(const char* instrument = \"\");\n// \u83b7\u53d6\u5408\u7ea6\u6700\u5c0f\u8df3\ndouble getTickSize(const char* instrument = \"\");\n// \u83b7\u53d6\u5408\u7ea6\u6700\u65b0\u4ef7\ndouble getLastPrice(const char* instrument = \"\");\n// \u83b7\u53d6\u5408\u7ea6\u5356\u4e00\u4ef7\ndouble getAskPrice(const char* instrument = \"\");\n// \u83b7\u53d6\u5408\u7ea6\u4e70\u4e00\u4ef7\ndouble getBidPrice(const char* instrument = \"\");\n\n\n\n\u2003\u4ea4\u6613API\n\n\nbool   openLong(const char* instrument, double quantity, char* clOrdId);\nbool   closeLong(const char* instrument, char* clOrdId);\nbool   openShort(const char* instrument, double quantity, char* clOrdId);\nbool   closeShort(const char* instrument, char* clOrdId);\n\nbool   buy(const char* instrument, double quantity, double price, char* clOrdId, int srvId = 0);\nbool   sell(const char* instrument, double quantity, double price, char* clOrdId, int srvId = 0);\nbool   sellShort(const char* instrument, double quantity, double price, char* clOrdId, int srvId = 0);\nbool   buyToCover(const char* instrument, double quantity, double price, char* clOrdId, int srvId = 0);\n\nbool   submitOrder(Order& order);\nint    getOrderStatus(const char* _clOrdId);\nOrder  getOrderSnapshot(const char* _clOrdId);\nint    getPendingOrders(OrderList& list, const char* instrument = \"\");\nbool   cancelOrder(const char* _clOrdId);\nbool   cancelOrder(const Order& order);\nbool   isOrderPending(const char* _clOrdId);\n\n\n\n\u2003\u6301\u4ed3API\n\n\nint    getAccountPositions(AccountPositionList& list, const char* instrument = \"\");\nint    getStrategyPositions(StrategyPositionList& list, const char* instrument = \"\");\ndouble getTotalPosSize(const char* instrument = \"\");\n\ndouble getLongPosSize(const char* instrument = \"\");\nvoid   getLongPosSize(double* closable, double* frozen, double* unformed);\nvoid   getLongPosSize(const char* instrument, double* closable, double* frozen, double* unformed);\nStrategyPosition getLongPos(const char* instrument = \"\");\n\ndouble getShortPosSize(const char* instrument = \"\");\nvoid   getShortPosSize(double* closable, double* frozen, double* unformed);\nvoid   getShortPosSize(const char* instrument, double* closable, double* frozen, double* unformed);\nStrategyPosition getShortPos(const char* instrument = \"\");\n\ndouble getClosableLongPosSize(const char* instrument = \"\");\nStrategyPosition getClosableLongPos(const char* instrument = \"\");\n\ndouble getClosableShortPosSize(const char* instrument = \"\");\nStrategyPosition getClosableShortPos(const char* instrument = \"\");\n\ndouble getAcctClosableLongPosSize(const char* instrument = \"\", int srvId = 0);\n\ndouble getAcctClosableShortPosSize(const char* instrument = \"\", int srvId = 0);\n\ndouble getAcctLongPosSize(const char* instrument = \"\", int srvId = 0);\ndouble getAcctHistLongPosSize(const char* instrument = \"\", int srvId = 0);\ndouble getAcctLongPos(const char* instrument, double* price, int* date, int* time, int srvId = 0);\nStrategyPosition getAcctLongPos(const char* instrument = \"\", int srvId = 0);\n\ndouble getAcctShortPosSize(const char* instrument = \"\", int srvId = 0);\ndouble getAcctHistShortPosSize(const char* instrument = \"\", int srvId = 0);\ndouble getAcctShortPos(const char* instrument, double* price, int* date, int* time, int srvId = 0);\nStrategyPosition getAcctShortPos(const char* instrument = \"\", int srvId = 0);\n\nbool assignLongPosition(const char* instrument, double size, double price, double frozen = 0,\n                        int date = 0, int time = 0, int ms = 0, \n                        double highest = 0, double lowest = 0);\nbool assignShortPosition(const char* instrument, double size, double price, double frozen = 0,\n                         int date = 0, int time = 0, int ms = 0,\n                         double highest = 0, double lowest = 0);\n\n\n\n\u2003\u5176\u5b83API\n\n\nint         getId() const;\nint         getStatus() const;\nconst char* getName() const;\nvoid   writeLogMsg(const char* msg);\nbool   isVerboseMsgEnabled() const;\nvoid   writeVerboseMsg(const char* msg);\nvoid   writeErrorMsg(const char* msg);\n\n\n\n\u2003\u56de\u8c03\u63a5\u53e3\n\n\nvirtual void onCreate() {}\nvirtual void onSetParameter(const char* name, int type, const char* value, bool isLast) {}\nvirtual int  onBarSeriesFeed(const char* instrument, int resolution, int interval, int num, MarketData* buffer) { return 0; }\nvirtual void onStart() {}\nvirtual void onTick(const MarketData& data) {}\nvirtual void onBar(const Bar& bar) {}\nvirtual void onOrderSubmitted(const Order& order) {}\nvirtual void onOrderUpdated(const Order& order) {}\nvirtual void onExecutionReport(const Execution& exec) {}\nvirtual void onOrderPartiallyFilled(const Order& order) {}\nvirtual void onOrderFilled(const Order& order) {}\nvirtual void onOrderRejected(const Order& order) {}\nvirtual void onOrderCancelled(const Order& order) {}\nvirtual void onOrderCancelRejected(const Order& order) {}\nvirtual void onCommand(const char* command) {}\nvirtual void onTimer(int timerId) {}\nvirtual void onHistoricalDataRequestAck(const HistoricalDataRequest& request) {}\nvirtual void onEnvVariable(const char* name, const char* value) {}\nvirtual void onPause() {}\nvirtual void onResume() {}\nvirtual void onStop() {}\nvirtual void onDestory() {}\n\n\n\n\u2003\u8fd0\u884c\u63a5\u53e3\n\n\n#define DEFAULT_SRV_ADDR        (\"127.0.0.1\")\n#define DEFAULT_SRV_PORT        (5501)\n\nbool run(const StrategyConfig& config, const char* srvAddr = DEFAULT_SRV_ADDR, int srvPort = DEFAULT_SRV_PORT);\nvoid stop();\n\n\n\nStrategyConfig\n\n\n\u2003\u8bbe\u7f6e\u63a5\u53e3\n\n\nvoid             setName(const char* name);\nconst char*      getName() const;\nvoid             setDescription(const char* desc);\nconst char*      getDescription() const;\nvoid             setAuthor(const char* author);\nconst char*      getAuthor() const;\nvoid enableAlgoTrader();\nvoid disableAlgoTrader();\n\n\n\n\u2003\u884c\u60c5\u8ba2\u9605\n\n\nvoid subscribe(const char* instrument, int resolution = Resolution::TICK, int interval = 0);\n\n\n\n\u2003\u53c2\u6570\u8bbe\u7f6e\n\n\nStrategyConfig& setUserParameter(const char* name, int value);\nStrategyConfig& setUserParameter(const char* name, double value);\nStrategyConfig& setUserParameter(const char* name, bool value);\nStrategyConfig& setUserParameter(const char* name, const char* value);",
            "title": "\u7b56\u7565SDK"
        },
        {
            "location": "/sdk/#_1",
            "text": "",
            "title": "\u6570\u636e\u7ed3\u6784"
        },
        {
            "location": "/sdk/#resolution",
            "text": "\u884c\u60c5\u5468\u671f  TICK   = 0,                 \nSECOND = 1,                \nMINUTE = 60,                \nHOUR   = 60 * 60,          \nDAY    = 24 * 60 * 60,     \nWEEK   = 24 * 60 * 60 * 7",
            "title": "&emsp;Resolution"
        },
        {
            "location": "/sdk/#exchangecode",
            "text": "\u4ea4\u6613\u6240\u4ee3\u7801    EXCHG_UNKNOWN = 0x00,\nEXCHG_SSE     = 0x0001,\nEXCHG_SZE     = 0x0002,\nEXCHG_SHFE    = 0x0004,\nEXCHG_DCE     = 0x0008,\nEXCHG_CZCE    = 0x0010,\nEXCHG_CFFEX   = 0x0020,\nEXCHG_GOLD    = 0x0040",
            "title": "&emsp;ExchangeCode"
        },
        {
            "location": "/sdk/#securitytype",
            "text": "\u8bc1\u5238\u7c7b\u578b  UNKNOWN = 0,\nSTOCK,\nFUTURE,\nFOREX,\nOPTION",
            "title": "&emsp;SecurityType"
        },
        {
            "location": "/sdk/#marketdata",
            "text": "\u884c\u60c5\u6570\u636e  char      type;\nchar      securityType;\nchar      instrument[LEN_INSTRUMENT];\nchar      exchange[LEN_EXCHANGE];\nint       date;     // YYYYMMDD\nint       time;     // hhmmss\nint       millis;\nint       resolution;\nint       interval;\ndouble    lastPrice;\ndouble    openPrice;\ndouble    highestPrice;\ndouble    lowestPrice;\ndouble    closePrice;\ndouble    volume;\nlong long openInterest;\ndouble    turnover;\ndouble    upperLimitPrice;\ndouble    lowerLimitPrice;\ndouble    preSettlePrice;\ndouble    preClosePrice;\ndouble    settlePrice;\nint       preOpenInterest;\ndouble    averagePrice;\nint       depth;\n\ndouble    bidPrice1;\nint       bidVolume1;\ndouble    bidPrice2;\nint       bidVolume2;\ndouble    bidPrice3;\nint       bidVolume3;\ndouble    bidPrice4;\nint       bidVolume4;\ndouble    bidPrice5;\nint       bidVolume5;\n\ndouble    askPrice1;\nint       askVolume1;\ndouble    askPrice2;\nint       askVolume2;\ndouble    askPrice3;\nint       askVolume3;\ndouble    askPrice4;\nint       askVolume4;\ndouble    askPrice5;\nint       askVolume5;",
            "title": "&emsp;MarketData"
        },
        {
            "location": "/sdk/#timeinforce",
            "text": "\u8ba2\u5355\u65f6\u6548    DAY = 0,\nGTC,\nOPG,\nIOC,\nFOK,\nGTX,\nGTD,",
            "title": "&emsp;TimeInforce"
        },
        {
            "location": "/sdk/#order",
            "text": "\u8ba2\u5355  // Buy side's original client order ID, uniqueness must be guaranteed within a single trading day.\nchar          clOrdId[LEN_ID];\n// Sell side's reference for this order.\nchar          ordId[LEN_ID];\nchar          instrument[LEN_INSTRUMENT];\nint           exchange;\nint           type;\nint           action;\nint           timeInforce;\nbool          allOrNone;\nint           status;\ndouble        quantity;\ndouble        price;\ndouble        stopPx;\ndouble        tradedQty;\ndouble        avgTradedPx;\ndouble        lastTradedQty;\ndouble        lastTradedPx;\nlong          date;\nlong          time;\ndouble        commissions;\nchar          stateMsg[LEN_STATE_MSG];\nbool          closeAction;          // Distinguish three closing actions.\nint           compId;               // Component who submit this order.\nint           ownerId;              // Strategy who submit this order.\nint           srvId;",
            "title": "&emsp;Order"
        },
        {
            "location": "/sdk/#execution",
            "text": "\u6210\u4ea4\u4fe1\u606f  char          instrument[LEN_INSTRUMENT];\nint           type;\nint           action;\nint           date;       // YYYYMMDD\nint           time;       // hhmmss\nint           millis;\ndouble        quantity;\ndouble        price;\nbool          closeAction;\n\nchar          clOrdId[LEN_ID];\nchar          ordId[LEN_ID];\nchar          execId[LEN_ID];\nint           srvId;",
            "title": "&emsp;Execution"
        },
        {
            "location": "/sdk/#orderaction",
            "text": "\u62a5\u5355\u65b9\u5411  BUY          = 1,\nBUY_TO_COVER = 2,\nSELL         = 3,\nSELL_SHORT   = 4,",
            "title": "&emsp;OrderAction"
        },
        {
            "location": "/sdk/#orderstate",
            "text": "\u8ba2\u5355\u72b6\u6001  UNKNOWN = 0,\nINITIAL,           // Initial state.\nPENDING_NEW,\nSUBMITTED,         // Order has been submitted.\nACCEPTED,          // Order has been acknowledged by the broker.\nPENDING_CANCEL,\nCANCELED,          // Order has been canceled.\nPARTIALLY_FILLED,  // Order has been partially filled.\nFILLED,            // Order has been completely filled.\nREJECTED           // Order has been rejected.",
            "title": "&emsp;OrderState"
        },
        {
            "location": "/sdk/#ordertype",
            "text": "\u8ba2\u5355\u7c7b\u578b  MARKET     = 1,\nLIMIT      = 2,\nSTOP       = 3,\nSTOP_LIMIT = 4,",
            "title": "&emsp;OrderType"
        },
        {
            "location": "/sdk/#accountdetails",
            "text": "\u8d26\u6237\u4fe1\u606f  char   userCode[32];\nchar   password[32];\nchar   userName[64];\nchar   currency[8];\ndouble preBalance;\ndouble preDeposit;\ndouble margin;\ndouble lastFund;\ndouble currMargin;\ndouble deposit;\ndouble withdraw;\ndouble equity;\ndouble availFunds;\ndouble buyFreeze;\ndouble sellFreeze;\ndouble buyBond;\ndouble sellBond;\ndouble realizedPnL;\ndouble unrealizedPnL;\ndouble totalBond;\ndouble totalExBond;\ndouble todayReleaseFund;\ndouble comFreeze;\ndouble commission;\ndouble otherFreeze;\ndouble totalFreeze;\ndouble riskLevel;",
            "title": "&emsp;AccountDetails"
        },
        {
            "location": "/sdk/#securitydefinition",
            "text": "\u5408\u7ea6\u5b9a\u4e49  char   instrument[LEN_INSTRUMENT];\nchar   name[32];\nint    exchgCode;\ndouble upPrice;\ndouble lowPrice;\ndouble moneyRate;\ndouble longMarginRatio;\ndouble shortMarginRatio;\ndouble multiplier;\nchar   mktdate1[20];\nchar   mktdate2[20];\ndouble tickSize;\ndouble upDealNum;\ndouble lowDealNum;\nint    isTrading;",
            "title": "&emsp;SecurityDefinition"
        },
        {
            "location": "/sdk/#positiondate",
            "text": "\u4ed3\u4f4d\u65e5\u671f  POSITION_DATE_TODAY,\nPOSITION_DATE_HISTORY,\nPOSITION_DATE_ALL,",
            "title": "&emsp;PositionDate"
        },
        {
            "location": "/sdk/#positionside",
            "text": "\u4ed3\u4f4d\u65b9\u5411  POSITION_SIDE_LONG  = 'L',\nPOSITION_SIDE_SHORT = 'S'",
            "title": "&emsp;PositionSide"
        },
        {
            "location": "/sdk/#accountposition",
            "text": "\u8d26\u6237\u6301\u4ed3  char   instrument[LEN_INSTRUMENT];\nchar   side;\nchar   buysell;\nchar   dateMark;\ndouble cumQty;\ndouble todayQty;\ndouble histQty;\ndouble frozen;\ndouble preSettlmntPx;\ndouble cost;\ndouble avgPx;\ndouble unrealizedPnL;\ndouble realizedPnL;\ndouble margin;\nint    date;\nint    time;\nint    millis;\ndouble histHighestPx;\ndouble histLowestPx;\nchar   accountId[LEN_ID];",
            "title": "&emsp;AccountPosition"
        },
        {
            "location": "/sdk/#strategyposition",
            "text": "\u7b56\u7565\u6301\u4ed3  int    strategyId;\nchar   instrument[LEN_INSTRUMENT];\nint    side;\ndouble quantity;\ndouble frozen;\ndouble unformed;\ndouble avgPx;\ndouble margin;\ndouble unrealizedPnL;\ndouble realizedPnL;\nint    date;\nint    time;\nint    millis;\ndouble highestPx;\ndouble lowestPx;",
            "title": "&emsp;StrategyPosition"
        },
        {
            "location": "/sdk/#strategyparamtype",
            "text": "\u7b56\u7565\u53c2\u6570\u7c7b\u578b  PARAM_TYPE_BOOL,\nPARAM_TYPE_INT,\nPARAM_TYPE_FLOAT,\nPARAM_TYPE_STRING,",
            "title": "&emsp;StrategyParamType"
        },
        {
            "location": "/sdk/#strategybase",
            "text": "",
            "title": "StrategyBase"
        },
        {
            "location": "/sdk/#api",
            "text": "const char* getMainInstrument() const;\nBarSeries*  getTickSeries(const char* instrument = \"\");\nBarSeries*  getBarSeries(const char* instrument = \"\", int resolution = Resolution::MINUTE, int interval = 1);\n// \u8ba2\u9605\u884c\u60c5\nbool   subscribe(const char* instrument, int resolution = Resolution::TICK, int interval = 1, int srvId = 0);\n// \u53d6\u6d88\u8ba2\u9605\nbool   unsubscribe(const char* instrument, int resolution = Resolution::TICK, int interval = 1, int srvId = 0);\n// \u83b7\u53d6\u5408\u7ea6\u4e58\u6570\ndouble getMultiplier(const char* instrument = \"\");\n// \u83b7\u53d6\u5408\u7ea6\u6700\u5c0f\u8df3\ndouble getTickSize(const char* instrument = \"\");\n// \u83b7\u53d6\u5408\u7ea6\u6700\u65b0\u4ef7\ndouble getLastPrice(const char* instrument = \"\");\n// \u83b7\u53d6\u5408\u7ea6\u5356\u4e00\u4ef7\ndouble getAskPrice(const char* instrument = \"\");\n// \u83b7\u53d6\u5408\u7ea6\u4e70\u4e00\u4ef7\ndouble getBidPrice(const char* instrument = \"\");",
            "title": "&emsp;\u884c\u60c5API"
        },
        {
            "location": "/sdk/#api_1",
            "text": "bool   openLong(const char* instrument, double quantity, char* clOrdId);\nbool   closeLong(const char* instrument, char* clOrdId);\nbool   openShort(const char* instrument, double quantity, char* clOrdId);\nbool   closeShort(const char* instrument, char* clOrdId);\n\nbool   buy(const char* instrument, double quantity, double price, char* clOrdId, int srvId = 0);\nbool   sell(const char* instrument, double quantity, double price, char* clOrdId, int srvId = 0);\nbool   sellShort(const char* instrument, double quantity, double price, char* clOrdId, int srvId = 0);\nbool   buyToCover(const char* instrument, double quantity, double price, char* clOrdId, int srvId = 0);\n\nbool   submitOrder(Order& order);\nint    getOrderStatus(const char* _clOrdId);\nOrder  getOrderSnapshot(const char* _clOrdId);\nint    getPendingOrders(OrderList& list, const char* instrument = \"\");\nbool   cancelOrder(const char* _clOrdId);\nbool   cancelOrder(const Order& order);\nbool   isOrderPending(const char* _clOrdId);",
            "title": "&emsp;\u4ea4\u6613API"
        },
        {
            "location": "/sdk/#api_2",
            "text": "int    getAccountPositions(AccountPositionList& list, const char* instrument = \"\");\nint    getStrategyPositions(StrategyPositionList& list, const char* instrument = \"\");\ndouble getTotalPosSize(const char* instrument = \"\");\n\ndouble getLongPosSize(const char* instrument = \"\");\nvoid   getLongPosSize(double* closable, double* frozen, double* unformed);\nvoid   getLongPosSize(const char* instrument, double* closable, double* frozen, double* unformed);\nStrategyPosition getLongPos(const char* instrument = \"\");\n\ndouble getShortPosSize(const char* instrument = \"\");\nvoid   getShortPosSize(double* closable, double* frozen, double* unformed);\nvoid   getShortPosSize(const char* instrument, double* closable, double* frozen, double* unformed);\nStrategyPosition getShortPos(const char* instrument = \"\");\n\ndouble getClosableLongPosSize(const char* instrument = \"\");\nStrategyPosition getClosableLongPos(const char* instrument = \"\");\n\ndouble getClosableShortPosSize(const char* instrument = \"\");\nStrategyPosition getClosableShortPos(const char* instrument = \"\");\n\ndouble getAcctClosableLongPosSize(const char* instrument = \"\", int srvId = 0);\n\ndouble getAcctClosableShortPosSize(const char* instrument = \"\", int srvId = 0);\n\ndouble getAcctLongPosSize(const char* instrument = \"\", int srvId = 0);\ndouble getAcctHistLongPosSize(const char* instrument = \"\", int srvId = 0);\ndouble getAcctLongPos(const char* instrument, double* price, int* date, int* time, int srvId = 0);\nStrategyPosition getAcctLongPos(const char* instrument = \"\", int srvId = 0);\n\ndouble getAcctShortPosSize(const char* instrument = \"\", int srvId = 0);\ndouble getAcctHistShortPosSize(const char* instrument = \"\", int srvId = 0);\ndouble getAcctShortPos(const char* instrument, double* price, int* date, int* time, int srvId = 0);\nStrategyPosition getAcctShortPos(const char* instrument = \"\", int srvId = 0);\n\nbool assignLongPosition(const char* instrument, double size, double price, double frozen = 0,\n                        int date = 0, int time = 0, int ms = 0, \n                        double highest = 0, double lowest = 0);\nbool assignShortPosition(const char* instrument, double size, double price, double frozen = 0,\n                         int date = 0, int time = 0, int ms = 0,\n                         double highest = 0, double lowest = 0);",
            "title": "&emsp;\u6301\u4ed3API"
        },
        {
            "location": "/sdk/#api_3",
            "text": "int         getId() const;\nint         getStatus() const;\nconst char* getName() const;\nvoid   writeLogMsg(const char* msg);\nbool   isVerboseMsgEnabled() const;\nvoid   writeVerboseMsg(const char* msg);\nvoid   writeErrorMsg(const char* msg);",
            "title": "&emsp;\u5176\u5b83API"
        },
        {
            "location": "/sdk/#_2",
            "text": "virtual void onCreate() {}\nvirtual void onSetParameter(const char* name, int type, const char* value, bool isLast) {}\nvirtual int  onBarSeriesFeed(const char* instrument, int resolution, int interval, int num, MarketData* buffer) { return 0; }\nvirtual void onStart() {}\nvirtual void onTick(const MarketData& data) {}\nvirtual void onBar(const Bar& bar) {}\nvirtual void onOrderSubmitted(const Order& order) {}\nvirtual void onOrderUpdated(const Order& order) {}\nvirtual void onExecutionReport(const Execution& exec) {}\nvirtual void onOrderPartiallyFilled(const Order& order) {}\nvirtual void onOrderFilled(const Order& order) {}\nvirtual void onOrderRejected(const Order& order) {}\nvirtual void onOrderCancelled(const Order& order) {}\nvirtual void onOrderCancelRejected(const Order& order) {}\nvirtual void onCommand(const char* command) {}\nvirtual void onTimer(int timerId) {}\nvirtual void onHistoricalDataRequestAck(const HistoricalDataRequest& request) {}\nvirtual void onEnvVariable(const char* name, const char* value) {}\nvirtual void onPause() {}\nvirtual void onResume() {}\nvirtual void onStop() {}\nvirtual void onDestory() {}",
            "title": "&emsp;\u56de\u8c03\u63a5\u53e3"
        },
        {
            "location": "/sdk/#_3",
            "text": "#define DEFAULT_SRV_ADDR        (\"127.0.0.1\")\n#define DEFAULT_SRV_PORT        (5501)\n\nbool run(const StrategyConfig& config, const char* srvAddr = DEFAULT_SRV_ADDR, int srvPort = DEFAULT_SRV_PORT);\nvoid stop();",
            "title": "&emsp;\u8fd0\u884c\u63a5\u53e3"
        },
        {
            "location": "/sdk/#strategyconfig",
            "text": "",
            "title": "StrategyConfig"
        },
        {
            "location": "/sdk/#_4",
            "text": "void             setName(const char* name);\nconst char*      getName() const;\nvoid             setDescription(const char* desc);\nconst char*      getDescription() const;\nvoid             setAuthor(const char* author);\nconst char*      getAuthor() const;\nvoid enableAlgoTrader();\nvoid disableAlgoTrader();",
            "title": "&emsp;\u8bbe\u7f6e\u63a5\u53e3"
        },
        {
            "location": "/sdk/#_5",
            "text": "void subscribe(const char* instrument, int resolution = Resolution::TICK, int interval = 0);",
            "title": "&emsp;\u884c\u60c5\u8ba2\u9605"
        },
        {
            "location": "/sdk/#_6",
            "text": "StrategyConfig& setUserParameter(const char* name, int value);\nStrategyConfig& setUserParameter(const char* name, double value);\nStrategyConfig& setUserParameter(const char* name, bool value);\nStrategyConfig& setUserParameter(const char* name, const char* value);",
            "title": "&emsp;\u53c2\u6570\u8bbe\u7f6e"
        }
    ]
}